{"level":"info","ts":"2025-05-27T08:27:48.825+0800","caller":"server/main.go:33","msg":"config初始化成功: config.Config{Server:struct { Port string \"mapstructure:\\\"port\\\"\" }{Port:\"50051\"}, MySQL:struct { Host string \"mapstructure:\\\"host\\\"\"; Port int \"mapstructure:\\\"port\\\"\"; Username string \"mapstructure:\\\"username\\\"\"; Password string \"mapstructure:\\\"password\\\"\"; DBName string \"mapstructure:\\\"dbname\\\"\"; ParseTime bool \"mapstructure:\\\"parseTime\\\"\" }{Host:\"192.168.10.4\", Port:3310, Username:\"root\", Password:\"123456\", DBName:\"siwuai\", ParseTime:false}, Etcd:struct { Endpoints []string \"mapstructure:\\\"endpoints\\\"\"; ServiceName string \"mapstructure:\\\"serviceName\\\"\"; ServiceAddr string \"mapstructure:\\\"serviceAddr\\\"\"; TTL int64 \"mapstructure:\\\"ttl\\\"\" }{Endpoints:[]string{\"127.0.0.1:2379\"}, ServiceName:\"/services/siwuai\", ServiceAddr:\"127.0.0.1:50051\", TTL:5}, Redis:struct { Addr string \"mapstructure:\\\"addr\\\"\"; Password string \"mapstructure:\\\"password\\\"\"; DB int \"mapstructure:\\\"db\\\"\"; Timeout int \"mapstructure:\\\"timeout\\\"\" }{Addr:\"192.168.10.4:6379\", Password:\"123456\", DB:0, Timeout:5}, Logger:struct { LogPath string \"mapstructure:\\\"logPath\\\"\"; AppName string \"mapstructure:\\\"appName\\\"\"; Level int8 \"mapstructure:\\\"level\\\"\" }{LogPath:\"./logs\", AppName:\"siwuai\", Level:-1}, Token:struct { SecretKey string \"mapstructure:\\\"secretKey\\\"\"; GenerateTokenKey string \"mapstructure:\\\"generateTokenKey\\\"\" }{SecretKey:\"123456\", GenerateTokenKey:\"123456\"}, Llm:struct { ApiKey string \"mapstructure:\\\"apiKey\\\"\"; Model string \"mapstructure:\\\"model\\\"\"; BaseURL string \"mapstructure:\\\"baseURL\\\"\"; TemperatureCode float64 \"mapstructure:\\\"temperatureCode\\\"\"; TemperatureArticle float64 \"mapstructure:\\\"temperatureArticle\\\"\" }{ApiKey:\"18e25f60-6aff-418f-96fe-55b8cee6a273\", Model:\"deepseek-r1-250120\", BaseURL:\"https://ark.cn-beijing.volces.com/api/v3\", TemperatureCode:0, TemperatureArticle:1}}\n"}
{"level":"info","ts":"2025-05-27T08:27:50.028+0800","caller":"server/main.go:41","msg":"初始化 MySQL 成功"}
{"level":"info","ts":"2025-05-27T08:27:50.072+0800","caller":"server/main.go:50","msg":" 初始化 Redis 成功"}
{"level":"info","ts":"2025-05-27T08:27:50.124+0800","caller":"utils/bloom_filter_manager.go:133","msg":"布隆过滤器初始化完成，共加载 408 条记录"}
{"level":"info","ts":"2025-05-27T08:27:50.124+0800","caller":"utils/bloom_filter.go:33","msg":"BloomFilter 加载完成，使用动态参数调整和定期重建机制"}
{"level":"info","ts":"2025-05-27T08:27:50.129+0800","caller":"cache/local_cache.go:43","msg":"本地缓存(BigCache)初始化成功"}
{"level":"info","ts":"2025-05-27T08:27:50.129+0800","caller":"cache/cache_manager.go:74","msg":"多级缓存管理器初始化成功"}
{"level":"info","ts":"2025-05-27T08:27:50.129+0800","caller":"cache/cache_manager.go:176","msg":"开始缓存预热..."}
{"level":"debug","ts":"2025-05-27T08:27:50.130+0800","caller":"v3@v3.5.12/retry_interceptor.go:53","msg":"retrying of unary invoker","target":"etcd-endpoints://0xc000506a80/127.0.0.1:2379","attempt":0}
{"level":"debug","ts":"2025-05-27T08:27:50.196+0800","caller":"cache/cache_manager.go:144","msg":"缓存设置成功","key":"article:0","type":"article","expiration":259200,"data":"{\"ID\":310,\"CreatedAt\":\"2025-05-02T14:13:28.97+08:00\",\"UpdatedAt\":\"2025-05-02T14:13:28.97+08:00\",\"DeletedAt\":null,\"Key\":\"535fa30d7e25dd8a49f1536779734ec8286108d115da5045d77f3b4185d8f790\",\"ArticleID\":0,\"Abstract\":\"文章分析了 GORM 框架中四个核心方法的行为特征：1) First() 未查询到数据时返回 gorm.ErrRecordNotFound；2) Create() 插入失败时错误类型包含约束冲突/数据类型不匹配/连接问题；3) Update() 数据未变化时 RowsAffected 返回 0；4) Delete() 数据不存在时 error 为 nil 但 RowsAffected 为 0。\",\"Summary\":\"文章详细解构了 GORM ORM 框架在 CRUD 操作中的异常处理机制，重点阐述了不同方法在数据不存在/数据冲突/数据未变更等场景下的返回值特征，并提供了错误类型判断和事务回滚的实践建议。\",\"VisitCount\":0}"}
{"level":"debug","ts":"2025-05-27T08:27:50.205+0800","caller":"cache/cache_manager.go:144","msg":"缓存设置成功","key":"article:219","type":"article","expiration":259200,"data":"{\"ID\":298,\"CreatedAt\":\"2025-05-02T12:58:35.168+08:00\",\"UpdatedAt\":\"2025-05-02T12:58:35.168+08:00\",\"DeletedAt\":null,\"Key\":\"9834876dcfb05cb167a5c24953eba58c4ac89b1adf57f28f2f9d09af107ee8f0\",\"ArticleID\":219,\"Abstract\":\"文章内容存在异常，仅包含无意义字符\\\"aaa\\\"，无法提取有效技术信息\",\"Summary\":\"输入文本不符合技术文档规范，需提供完整的GORM框架技术解析内容才能进行有效分析\",\"VisitCount\":0}"}
{"level":"debug","ts":"2025-05-27T08:27:50.211+0800","caller":"cache/cache_manager.go:144","msg":"缓存设置成功","key":"article:0","type":"article","expiration":259200,"data":"{\"ID\":299,\"CreatedAt\":\"2025-05-02T13:17:15.799+08:00\",\"UpdatedAt\":\"2025-05-02T13:17:15.799+08:00\",\"DeletedAt\":null,\"Key\":\"8091efe97affa5ba5d7d8ea1aa14b037461433c4e890d45b188648d996790ed6\",\"ArticleID\":0,\"Abstract\":\"文章分析了 GORM 框架中四个核心方法的行为特征：1) First() 未查询到数据时返回 gorm.ErrRecordNotFound；2) Create() 插入失败时错误类型包含约束冲突/数据类型不匹配/连接问题；3) Update() 数据未变化时 RowsAffected 返回 0；4) Delete() 数据不存在时 error 为 nil 但 RowsAffected 为 0。\",\"Summary\":\"文章详细解构了 GORM ORM 框架在 CRUD 操作中的异常处理机制，重点阐述了不同方法在数据不存在/数据冲突/数据未变更等场景下的返回值特征，并提供了错误类型判断和事务回滚的实践建议。\",\"VisitCount\":0}"}
{"level":"debug","ts":"2025-05-27T08:27:50.229+0800","caller":"cache/cache_manager.go:144","msg":"缓存设置成功","key":"article:0","type":"article","expiration":259200,"data":"{\"ID\":300,\"CreatedAt\":\"2025-05-02T13:22:51.256+08:00\",\"UpdatedAt\":\"2025-05-02T13:22:51.256+08:00\",\"DeletedAt\":null,\"Key\":\"bcb15f821479b4d5772bd0ca866c00ad5f926e3580720659cc80d39c9d09802a\",\"ArticleID\":0,\"Abstract\":\"文章分析了 GORM 框架中四个核心方法的行为特征：1) First() 未查询到数据时返回 gorm.ErrRecordNotFound；2) Create() 插入失败时错误类型包含约束冲突/数据类型不匹配/连接问题；3) Update() 数据未变化时 RowsAffected 返回 0；4) Delete() 数据不存在时 error 为 nil 但 RowsAffected 为 0。\",\"Summary\":\"文章详细解构了 GORM ORM 框架在 CRUD 操作中的异常处理机制，重点阐述了不同方法在数据不存在/数据冲突/数据未变更等场景下的返回值特征，并提供了错误类型判断和事务回滚的实践建议。\",\"VisitCount\":0}"}
{"level":"debug","ts":"2025-05-27T08:27:50.248+0800","caller":"cache/cache_manager.go:144","msg":"缓存设置成功","key":"article:0","type":"article","expiration":259200,"data":"{\"ID\":301,\"CreatedAt\":\"2025-05-02T13:23:24.125+08:00\",\"UpdatedAt\":\"2025-05-02T13:23:24.125+08:00\",\"DeletedAt\":null,\"Key\":\"dd65c0a7536affef35f3383b9c1be5a8fe319f6a99c5c29a70f8c8b91ea8bba1\",\"ArticleID\":0,\"Abstract\":\"文章分析了 GORM 框架中四个核心方法的行为特征：1) First() 未查询到数据时返回 gorm.ErrRecordNotFound；2) Create() 插入失败时错误类型包含约束冲突/数据类型不匹配/连接问题；3) Update() 数据未变化时 RowsAffected 返回 0；4) Delete() 数据不存在时 error 为 nil 但 RowsAffected 为 0。\",\"Summary\":\"文章详细解构了 GORM ORM 框架在 CRUD 操作中的异常处理机制，重点阐述了不同方法在数据不存在/数据冲突/数据未变更等场景下的返回值特征，并提供了错误类型判断和事务回滚的实践建议。\",\"VisitCount\":0}"}
{"level":"debug","ts":"2025-05-27T08:27:50.290+0800","caller":"cache/cache_manager.go:144","msg":"缓存设置成功","key":"article:0","type":"article","expiration":259200,"data":"{\"ID\":302,\"CreatedAt\":\"2025-05-02T13:26:19.726+08:00\",\"UpdatedAt\":\"2025-05-02T13:26:19.726+08:00\",\"DeletedAt\":null,\"Key\":\"fe6340be87fd5e43b7f0cac5741e76205dd69a68b2024fda16c696848a720f7a\",\"ArticleID\":0,\"Abstract\":\"文章分析了 GORM 框架中四个核心方法的行为特征：1) First() 未查询到数据时返回 gorm.ErrRecordNotFound；2) Create() 插入失败时错误类型包含约束冲突/数据类型不匹配/连接问题；3) Update() 数据未变化时 RowsAffected 返回 0；4) Delete() 数据不存在时 error 为 nil 但 RowsAffected 为 0。\",\"Summary\":\"文章详细解构了 GORM ORM 框架在 CRUD 操作中的异常处理机制，重点阐述了不同方法在数据不存在/数据冲突/数据未变更等场景下的返回值特征，并提供了错误类型判断和事务回滚的实践建议。\",\"VisitCount\":0}"}
{"level":"debug","ts":"2025-05-27T08:27:50.300+0800","caller":"cache/cache_manager.go:144","msg":"缓存设置成功","key":"article:0","type":"article","expiration":259200,"data":"{\"ID\":303,\"CreatedAt\":\"2025-05-02T13:28:50.333+08:00\",\"UpdatedAt\":\"2025-05-02T13:28:50.333+08:00\",\"DeletedAt\":null,\"Key\":\"08dd19ebe332aeb67bca30589e54e627232949c7373d3e353f94c21f69a9d9c5\",\"ArticleID\":0,\"Abstract\":\"文章解析了 GORM 框架四个核心方法的异常处理机制：1) First() 未查询到数据返回 gorm.ErrRecordNotFound；2) Create() 插入失败包含约束冲突/数据类型错误/连接异常；3) Update() 数据未修改时 RowsAffected 为 0；4) Delete() 数据不存在时 error 为空但 RowsAffected 为 0。\",\"Summary\":\"文章系统梳理了 GORM 在 CRUD 操作中的错误反馈模式，重点说明不同方法在空查询/数据冲突/零变更等场景的返回值差异，并给出错误类型识别与事务处理的开发指导。\",\"VisitCount\":0}"}
{"level":"debug","ts":"2025-05-27T08:27:50.327+0800","caller":"cache/cache_manager.go:144","msg":"缓存设置成功","key":"article:0","type":"article","expiration":259200,"data":"{\"ID\":304,\"CreatedAt\":\"2025-05-02T13:35:21.924+08:00\",\"UpdatedAt\":\"2025-05-02T13:35:21.924+08:00\",\"DeletedAt\":null,\"Key\":\"cfae26288bd82e1a97669b7720470cf394e87b0e53bdd7e584055805cc63001f\",\"ArticleID\":0,\"Abstract\":\"文章解析了 GORM 框架四个核心方法的行为特征：1) First() 未查询到数据时返回特定错误类型；2) Create() 插入失败包含约束冲突等错误类型；3) Update() 数据未变化时返回 0 影响行数；4) Delete() 数据不存在时无错误但影响行数为 0。\",\"Summary\":\"文章系统梳理了 GORM 框架在 CRUD 操作中的异常处理逻辑，明确不同方法在数据冲突/不存在/未变更场景的返回值差异，并给出错误类型判断与事务处理的实践指导。\",\"VisitCount\":0}"}
{"level":"debug","ts":"2025-05-27T08:27:50.362+0800","caller":"cache/cache_manager.go:144","msg":"缓存设置成功","key":"article:0","type":"article","expiration":259200,"data":"{\"ID\":305,\"CreatedAt\":\"2025-05-02T13:37:45.413+08:00\",\"UpdatedAt\":\"2025-05-02T13:37:45.413+08:00\",\"DeletedAt\":null,\"Key\":\"27f200af7573aa4bf10b38a29b1a8fca4df35429b8a2f49cd827b87779ea978b\",\"ArticleID\":0,\"Abstract\":\"文章分析了 GORM 框架中四个核心方法的行为特征：1) First() 未查询到数据时返回 gorm.ErrRecordNotFound；2) Create() 插入失败时错误类型包含约束冲突/数据类型不匹配/连接问题；3) Update() 数据未变化时 RowsAffected 返回 0；4) Delete() 数据不存在时 error 为 nil 但 RowsAffected 为 0。\",\"Summary\":\"文章详细解构了 GORM ORM 框架在 CRUD 操作中的异常处理机制，重点阐述了不同方法在数据不存在/数据冲突/数据未变更等场景下的返回值特征，并提供了错误类型判断和事务回滚的实践建议。\",\"VisitCount\":0}"}
{"level":"debug","ts":"2025-05-27T08:27:50.404+0800","caller":"cache/cache_manager.go:144","msg":"缓存设置成功","key":"article:0","type":"article","expiration":259200,"data":"{\"ID\":306,\"CreatedAt\":\"2025-05-02T13:38:41.363+08:00\",\"UpdatedAt\":\"2025-05-02T13:38:41.363+08:00\",\"DeletedAt\":null,\"Key\":\"4a3ea36e79755b7eaad63e776b6d74f26b833410d08f7bc978330fddafe5844e\",\"ArticleID\":0,\"Abstract\":\"文章解析了 GORM 框架四个核心方法的异常处理机制：1) First() 未查询到数据返回 gorm.ErrRecordNotFound；2) Create() 插入失败包含约束冲突/数据类型错误/连接异常；3) Update() 数据未修改时 RowsAffected 为 0；4) Delete() 数据不存在时 error 为 nil 但 RowsAffected 为 0。\",\"Summary\":\"文章系统梳理了 GORM ORM 框架在 CRUD 操作中的错误反馈模式，重点对比不同方法在数据缺失/操作无效/执行失败等场景的返回值差异，并给出错误类型识别与事务处理的开发指导。\",\"VisitCount\":0}"}
{"level":"debug","ts":"2025-05-27T08:27:50.442+0800","caller":"cache/cache_manager.go:144","msg":"缓存设置成功","key":"article:0","type":"article","expiration":259200,"data":"{\"ID\":307,\"CreatedAt\":\"2025-05-02T13:38:50.781+08:00\",\"UpdatedAt\":\"2025-05-02T13:38:50.781+08:00\",\"DeletedAt\":null,\"Key\":\"5b0345f377ea69318b5f70d9a20d31cb42bac9a599188ceab6d5b5d00d7726ef\",\"ArticleID\":0,\"Abstract\":\"文章解析了 GORM 框架四个核心方法的行为特征：1) First() 未查询到数据时返回 gorm.ErrRecordNotFound；2) Create() 插入失败包含约束冲突/数据类型错误/连接异常；3) Update() 数据未修改时 RowsAffected 为 0；4) Delete() 数据不存在时 error 为 nil 但 RowsAffected 为 0。\",\"Summary\":\"文章系统剖析了 GORM 在 CRUD 操作中的异常处理逻辑，明确不同方法在空查询/数据冲突/无变更等场景的返回值差异，并给出错误类型识别与事务处理的工程实践指导。\",\"VisitCount\":0}"}
{"level":"debug","ts":"2025-05-27T08:27:50.467+0800","caller":"cache/cache_manager.go:144","msg":"缓存设置成功","key":"article:0","type":"article","expiration":259200,"data":"{\"ID\":308,\"CreatedAt\":\"2025-05-02T13:46:12.474+08:00\",\"UpdatedAt\":\"2025-05-02T13:46:12.474+08:00\",\"DeletedAt\":null,\"Key\":\"688787d8ff144c502c7f5cffaafe2cc588d86079f9de88304c26b0cb99ce91c6\",\"ArticleID\":0,\"Abstract\":\"文章分析了 GORM 框架中四个核心方法的行为特征：1) First() 未查询到数据时返回 gorm.ErrRecordNotFound；2) Create() 插入失败时错误类型包含约束冲突/数据类型不匹配/连接问题；3) Update() 数据未变化时 RowsAffected 返回 0；4) Delete() 数据不存在时 error 为 nil 但 RowsAffected 为 0。\",\"Summary\":\"文章详细解构了 GORM ORM 框架在 CRUD 操作中的异常处理机制，重点阐述了不同方法在数据不存在/数据冲突/数据未变更等场景下的返回值特征，并提供了错误类型判断和事务回滚的实践建议。\",\"VisitCount\":0}"}
{"level":"debug","ts":"2025-05-27T08:27:50.490+0800","caller":"cache/cache_manager.go:144","msg":"缓存设置成功","key":"article:0","type":"article","expiration":259200,"data":"{\"ID\":309,\"CreatedAt\":\"2025-05-02T13:52:17.664+08:00\",\"UpdatedAt\":\"2025-05-02T13:52:17.664+08:00\",\"DeletedAt\":null,\"Key\":\"19c451aedfb24c338a9a2a5c31d553ed77e7cdefc655035f390176ac24066051\",\"ArticleID\":0,\"Abstract\":\"文章分析了 GORM 框架中四个核心方法的行为特征：1) First() 未查询到数据时返回 gorm.ErrRecordNotFound；2) Create() 插入失败时错误类型包含约束冲突/数据类型不匹配/连接问题；3) Update() 数据未变化时 RowsAffected 返回 0；4) Delete() 数据不存在时 error 为 nil 但 RowsAffected 为 0。\",\"Summary\":\"文章详细解构了 GORM ORM 框架在 CRUD 操作中的异常处理机制，重点阐述了不同方法在数据不存在/数据冲突/数据未变更等场景下的返回值特征，并提供了错误类型判断和事务回滚的实践建议。\",\"VisitCount\":0}"}
{"level":"debug","ts":"2025-05-27T08:27:50.507+0800","caller":"cache/cache_manager.go:144","msg":"缓存设置成功","key":"article:0","type":"article","expiration":259200,"data":"{\"ID\":297,\"CreatedAt\":\"2025-05-02T12:57:46.292+08:00\",\"UpdatedAt\":\"2025-05-02T12:57:46.292+08:00\",\"DeletedAt\":null,\"Key\":\"5c4ba640d8f2bf13ef0e797e56a3a064770c11c8c975950f5bbf230ee022f94f\",\"ArticleID\":0,\"Abstract\":\"文章分析了 GORM 框架中四个核心方法的行为特征：1) First() 未查询到数据时返回 gorm.ErrRecordNotFound；2) Create() 插入失败时错误类型包含约束冲突/数据类型不匹配/连接问题；3) Update() 数据未变化时 RowsAffected 返回 0；4) Delete() 数据不存在时 error 为 nil 但 RowsAffected 为 0。\",\"Summary\":\"文章详细解构了 GORM ORM 框架在 CRUD 操作中的异常处理机制，重点阐述了不同方法在数据不存在/数据冲突/数据未变更等场景下的返回值特征，并提供了错误类型判断和事务回滚的实践建议。\",\"VisitCount\":0}"}
{"level":"debug","ts":"2025-05-27T08:27:50.543+0800","caller":"cache/cache_manager.go:144","msg":"缓存设置成功","key":"article:0","type":"article","expiration":259200,"data":"{\"ID\":311,\"CreatedAt\":\"2025-05-02T14:15:18.091+08:00\",\"UpdatedAt\":\"2025-05-02T14:15:18.091+08:00\",\"DeletedAt\":null,\"Key\":\"fa2b7af0a811b9acde602aacb78e3638e8506dfead5fe6c3425b10b526f94bdd\",\"ArticleID\":0,\"Abstract\":\"文章解析了 GORM 框架四个核心方法的异常处理机制：1) First() 未查询到数据返回 gorm.ErrRecordNotFound；2) Create() 插入失败包含约束冲突/数据类型错误/连接异常；3) Update() 数据未修改时 RowsAffected 为 0；4) Delete() 数据不存在时 error 为 nil 但 RowsAffected 为 0。\",\"Summary\":\"文章系统梳理了 GORM 在 CRUD 操作中的差异化错误处理逻辑，明确数据不存在、约束冲突、零值更新等场景下的返回值特征，并给出错误类型精准判断与事务处理的工程实践指导。\",\"VisitCount\":0}"}
{"level":"debug","ts":"2025-05-27T08:27:50.565+0800","caller":"cache/cache_manager.go:144","msg":"缓存设置成功","key":"article:0","type":"article","expiration":259200,"data":"{\"ID\":312,\"CreatedAt\":\"2025-05-02T14:17:12.998+08:00\",\"UpdatedAt\":\"2025-05-02T14:17:12.998+08:00\",\"DeletedAt\":null,\"Key\":\"4cf6829aa93728e8f3c97df913fb1bfa95fe5810e2933a05943f8312a98d9cf2\",\"ArticleID\":0,\"Abstract\":\"文章分析了 GORM 框架中四个核心方法的行为特征：1) First() 未查询到数据时返回 gorm.ErrRecordNotFound；2) Create() 插入失败时错误类型包含约束冲突/数据类型不匹配/连接问题；3) Update() 数据未变化时 RowsAffected 返回 0；4) Delete() 数据不存在时 error 为 nil 但 RowsAffected 为 0。\",\"Summary\":\"文章详细解构了 GORM ORM 框架在 CRUD 操作中的异常处理机制，重点阐述了不同方法在数据不存在/数据冲突/数据未变更等场景下的返回值特征，并提供了错误类型判断和事务回滚的实践建议。\",\"VisitCount\":0}"}
{"level":"debug","ts":"2025-05-27T08:27:50.582+0800","caller":"cache/cache_manager.go:144","msg":"缓存设置成功","key":"article:0","type":"article","expiration":259200,"data":"{\"ID\":313,\"CreatedAt\":\"2025-05-02T14:20:18.919+08:00\",\"UpdatedAt\":\"2025-05-02T14:20:18.919+08:00\",\"DeletedAt\":null,\"Key\":\"b2ca4c32632ea0aed838cbd24b30911f556f126a33f75f844f675fe391389532\",\"ArticleID\":0,\"Abstract\":\"文章分析了 GORM 框架中四个核心方法的行为特征：1) First() 未查询到数据时返回 gorm.ErrRecordNotFound；2) Create() 插入失败时错误类型包含约束冲突/数据类型不匹配/连接问题；3) Update() 数据未变化时 RowsAffected 返回 0；4) Delete() 数据不存在时 error 为 nil 但 RowsAffected 为 0。\",\"Summary\":\"文章详细解构了 GORM ORM 框架在 CRUD 操作中的异常处理机制，重点阐述了不同方法在数据不存在/数据冲突/数据未变更等场景下的返回值特征，并提供了错误类型判断和事务回滚的实践建议。\",\"VisitCount\":0}"}
{"level":"debug","ts":"2025-05-27T08:27:50.615+0800","caller":"cache/cache_manager.go:144","msg":"缓存设置成功","key":"article:0","type":"article","expiration":259200,"data":"{\"ID\":314,\"CreatedAt\":\"2025-05-03T00:54:17.478+08:00\",\"UpdatedAt\":\"2025-05-03T00:54:17.478+08:00\",\"DeletedAt\":null,\"Key\":\"d2696397e3ab70f45a7dad8676857947ddabe6abac3bc06d020ebafe84767cba\",\"ArticleID\":0,\"Abstract\":\"文章分析了 GORM 框架中四个核心方法的行为特征：1) First() 未查询到数据时返回 gorm.ErrRecordNotFound；2) Create() 插入失败时错误类型包含约束冲突/数据类型不匹配/连接问题；3) Update() 数据未变化时 RowsAffected 返回 0；4) Delete() 数据不存在时 error 为 nil 但 RowsAffected 为 0。\",\"Summary\":\"文章详细解构了 GORM ORM 框架在 CRUD 操作中的异常处理机制，重点阐述了不同方法在数据不存在/数据冲突/数据未变更等场景下的返回值特征，并提供了错误类型判断和事务回滚的实践建议。\",\"VisitCount\":0}"}
{"level":"debug","ts":"2025-05-27T08:27:50.658+0800","caller":"cache/cache_manager.go:144","msg":"缓存设置成功","key":"article:0","type":"article","expiration":259200,"data":"{\"ID\":315,\"CreatedAt\":\"2025-05-03T01:20:29.426+08:00\",\"UpdatedAt\":\"2025-05-03T01:20:29.426+08:00\",\"DeletedAt\":null,\"Key\":\"a665a45920422f9d417e4867efdc4fb8a04a1f3fff1fa07e998e86f7f7a27ae3\",\"ArticleID\":0,\"Abstract\":\"文章分析了 GORM 框架中四个核心方法的行为特征：1) First() 未查询到数据时返回 gorm.ErrRecordNotFound；2) Create() 插入失败时错误类型包含约束冲突/数据类型不匹配/连接问题；3) Update() 数据未变化时 RowsAffected 返回 0；4) Delete() 数据不存在时 error 为 nil 但 RowsAffected 为 0。\",\"Summary\":\"文章详细解构了 GORM ORM 框架在 CRUD 操作中的异常处理机制，重点阐述了不同方法在数据不存在/数据冲突/数据未变更等场景下的返回值特征，并提供了错误类型判断和事务回滚的实践建议。\",\"VisitCount\":0}"}
{"level":"debug","ts":"2025-05-27T08:27:50.689+0800","caller":"cache/cache_manager.go:144","msg":"缓存设置成功","key":"article:0","type":"article","expiration":259200,"data":"{\"ID\":316,\"CreatedAt\":\"2025-05-03T01:29:43.965+08:00\",\"UpdatedAt\":\"2025-05-03T01:29:43.965+08:00\",\"DeletedAt\":null,\"Key\":\"c5f9eb390a108b4859979e6b4356f30d03f48d8d836596fc8b09ab8307ef03f0\",\"ArticleID\":0,\"Abstract\":\"文章解析了 GORM 框架四个核心方法的异常处理机制：1) First() 未查询到数据返回 gorm.ErrRecordNotFound；2) Create() 插入失败包含约束冲突/数据类型错误/连接异常三类错误；3) Update() 数据未修改时 RowsAffected 为 0；4) Delete() 数据不存在时 error 为空但 RowsAffected 为 0。\",\"Summary\":\"文章系统梳理了 GORM 框架在 CRUD 操作中的错误处理逻辑，明确区分了数据不存在、约束冲突、数据未变更等场景下的返回值差异，并针对事务回滚场景提出了基于错误类型判断的工程实践建议。\",\"VisitCount\":0}"}
{"level":"debug","ts":"2025-05-27T08:27:50.722+0800","caller":"cache/cache_manager.go:144","msg":"缓存设置成功","key":"article:0","type":"article","expiration":259200,"data":"{\"ID\":317,\"CreatedAt\":\"2025-05-03T01:30:11.957+08:00\",\"UpdatedAt\":\"2025-05-03T01:30:11.957+08:00\",\"DeletedAt\":null,\"Key\":\"7104741a92e73eb6c5d69cd04cf0afbe50a8796a010d8fa25daaf79e5e173bf3\",\"ArticleID\":0,\"Abstract\":\"文章解析了 GORM 框架四个核心方法的异常处理机制：1) First() 未查询到数据返回 gorm.ErrRecordNotFound；2) Create() 插入失败包含约束冲突/数据类型错误/连接异常；3) Update() 数据未修改时 RowsAffected=0；4) Delete() 数据不存在时 error 为 nil 但 RowsAffected=0。\",\"Summary\":\"文章系统阐述了 GORM 框架在 CRUD 操作中的错误返回逻辑，明确不同方法在数据缺失/冲突/未变更场景下的差异化处理方式，并给出错误类型识别与事务管理的具体指导方案。\",\"VisitCount\":0}"}
{"level":"debug","ts":"2025-05-27T08:27:50.759+0800","caller":"cache/cache_manager.go:144","msg":"缓存设置成功","key":"article:0","type":"article","expiration":259200,"data":"{\"ID\":318,\"CreatedAt\":\"2025-05-03T01:52:59.034+08:00\",\"UpdatedAt\":\"2025-05-03T01:52:59.034+08:00\",\"DeletedAt\":null,\"Key\":\"9b2de7c2319128b345a6024cb7836a49a98919c4a6777fbb66d3e55200c7b86f\",\"ArticleID\":0,\"Abstract\":\"文章分析了 GORM 框架中四个核心方法的行为特征：1) First() 未查询到数据时返回 gorm.ErrRecordNotFound；2) Create() 插入失败时错误类型包含约束冲突/数据类型不匹配/连接问题；3) Update() 数据未变化时 RowsAffected 返回 0；4) Delete() 数据不存在时 error 为 nil 但 RowsAffected 为 0。\",\"Summary\":\"文章详细解构了 GORM ORM 框架在 CRUD 操作中的异常处理机制，重点阐述了不同方法在数据不存在/数据冲突/数据未变更等场景下的返回值特征，并提供了错误类型判断和事务回滚的实践建议。\",\"VisitCount\":0}"}
{"level":"debug","ts":"2025-05-27T08:27:50.784+0800","caller":"cache/cache_manager.go:144","msg":"缓存设置成功","key":"article:0","type":"article","expiration":259200,"data":"{\"ID\":319,\"CreatedAt\":\"2025-05-03T01:54:58.768+08:00\",\"UpdatedAt\":\"2025-05-03T01:54:58.768+08:00\",\"DeletedAt\":null,\"Key\":\"3949ac1596ec77106a709a618bf5adcb19b77537ce8bcbdf54ff830169cdd084\",\"ArticleID\":0,\"Abstract\":\"文章解析了 GORM 框架四个核心方法的异常处理机制：1) First() 未查询到数据时返回 gorm.ErrRecordNotFound；2) Create() 插入失败可能因约束冲突/数据类型错误/连接问题触发错误；3) Update() 数据未修改时 RowsAffected 为 0；4) Delete() 数据不存在时 error 为空但 RowsAffected 为 0。\",\"Summary\":\"文章系统梳理了 GORM 在 CRUD 操作中的差异化错误反馈模式，明确了数据不存在、冲突校验、无变更场景下的返回值逻辑，并针对事务回滚和错误类型判断给出开发实践指导。\",\"VisitCount\":0}"}
{"level":"debug","ts":"2025-05-27T08:27:50.812+0800","caller":"cache/cache_manager.go:144","msg":"缓存设置成功","key":"article:0","type":"article","expiration":259200,"data":"{\"ID\":320,\"CreatedAt\":\"2025-05-03T02:02:22.169+08:00\",\"UpdatedAt\":\"2025-05-03T02:02:22.169+08:00\",\"DeletedAt\":null,\"Key\":\"33c995ef4bb3f05a77fbc5842b651cc1580880f595b95b09954af6da1e989b78\",\"ArticleID\":0,\"Abstract\":\"文章解析了 GORM 框架四个核心方法在异常场景下的返回值特征：1) First() 未查询到数据时返回 gorm.ErrRecordNotFound；2) Create() 插入失败包含约束冲突/数据类型错误/连接异常；3) Update() 数据未修改时 RowsAffected 为 0；4) Delete() 数据不存在时 error 为 nil 但 RowsAffected 为 0。\",\"Summary\":\"文章系统梳理了 GORM 框架在 CRUD 操作中的差异化错误处理逻辑，明确不同方法在数据缺失、约束冲突、零变更等场景的响应机制，并给出错误类型识别与事务管理的具体指导方案。\",\"VisitCount\":0}"}
{"level":"debug","ts":"2025-05-27T08:27:50.836+0800","caller":"cache/cache_manager.go:144","msg":"缓存设置成功","key":"article:0","type":"article","expiration":259200,"data":"{\"ID\":321,\"CreatedAt\":\"2025-05-03T02:17:56.451+08:00\",\"UpdatedAt\":\"2025-05-03T02:17:56.451+08:00\",\"DeletedAt\":null,\"Key\":\"5b986360eeaed5e6a90b04f1e9075f150664d65ad0d8cd389e08732fc14ac401\",\"ArticleID\":0,\"Abstract\":\"文章分析了 GORM 框架中四个核心方法的行为特征：1) First() 未查询到数据时返回 gorm.ErrRecordNotFound；2) Create() 插入失败时错误类型包含约束冲突/数据类型不匹配/连接问题；3) Update() 数据未变化时 RowsAffected 返回 0；4) Delete() 数据不存在时 error 为 nil 但 RowsAffected 为 0。\",\"Summary\":\"文章详细解构了 GORM ORM 框架在 CRUD 操作中的异常处理机制，重点阐述了不同方法在数据不存在/数据冲突/数据未变更等场景下的返回值特征，并提供了错误类型判断和事务回滚的实践建议。\",\"VisitCount\":0}"}
{"level":"debug","ts":"2025-05-27T08:27:50.861+0800","caller":"cache/cache_manager.go:144","msg":"缓存设置成功","key":"article:0","type":"article","expiration":259200,"data":"{\"ID\":413,\"CreatedAt\":\"2025-05-17T07:42:58.526+08:00\",\"UpdatedAt\":\"2025-05-17T07:42:58.526+08:00\",\"DeletedAt\":null,\"Key\":\"473287f8298dba7163a897908958f7c0eae733e25d2e027992ea2edc9bed2fa8\",\"ArticleID\":0,\"Abstract\":\"\",\"Summary\":\"\",\"VisitCount\":0}"}
{"level":"debug","ts":"2025-05-27T08:27:50.882+0800","caller":"cache/cache_manager.go:144","msg":"缓存设置成功","key":"article:0","type":"article","expiration":259200,"data":"{\"ID\":269,\"CreatedAt\":\"2025-05-02T06:42:20.45+08:00\",\"UpdatedAt\":\"2025-05-02T06:42:20.45+08:00\",\"DeletedAt\":null,\"Key\":\"47ec0c4bbeda610899ba7b7f46ed98c872d0c20a5d3f04adc1ca5edcf5ff85a9\",\"ArticleID\":0,\"Abstract\":\"文章分析了 GORM 框架中四个核心方法的行为特征：1) First() 未查询到数据时返回 gorm.ErrRecordNotFound；2) Create() 插入失败时错误类型包含约束冲突/数据类型不匹配/连接问题；3) Update() 数据未变化时 RowsAffected 返回 0；4) Delete() 数据不存在时 error 为 nil 但 RowsAffected 为 0。\",\"Summary\":\"文章详细解构了 GORM ORM 框架在 CRUD 操作中的异常处理机制，重点阐述了不同方法在数据不存在/数据冲突/数据未变更等场景下的返回值特征，并提供了错误类型判断和事务回滚的实践建议。\",\"VisitCount\":0}"}
{"level":"debug","ts":"2025-05-27T08:27:50.918+0800","caller":"cache/cache_manager.go:144","msg":"缓存设置成功","key":"article:0","type":"article","expiration":259200,"data":"{\"ID\":257,\"CreatedAt\":\"2025-05-02T01:29:47.087+08:00\",\"UpdatedAt\":\"2025-05-02T01:29:47.087+08:00\",\"DeletedAt\":null,\"Key\":\"e29c9c180c6279b0b02abd6a1801c7c04082cf486ec027aa13515e4f3884bb6b\",\"ArticleID\":0,\"Abstract\":\"文章分析了 GORM 框架中四个核心方法的行为特征：1) First() 未查询到数据时返回 gorm.ErrRecordNotFound；2) Create() 插入失败时错误类型包含约束冲突/数据类型不匹配/连接问题；3) Update() 数据未变化时 RowsAffected 返回 0；4) Delete() 数据不存在时 error 为 nil 但 RowsAffected 为 0。\",\"Summary\":\"文章详细解构了 GORM ORM 框架在 CRUD 操作中的异常处理机制，重点阐述了不同方法在数据不存在/数据冲突/数据未变更等场景下的返回值特征，并提供了错误类型判断和事务回滚的实践建议。\",\"VisitCount\":0}"}
{"level":"debug","ts":"2025-05-27T08:27:50.951+0800","caller":"cache/cache_manager.go:144","msg":"缓存设置成功","key":"article:0","type":"article","expiration":259200,"data":"{\"ID\":258,\"CreatedAt\":\"2025-05-02T01:35:40.126+08:00\",\"UpdatedAt\":\"2025-05-02T01:35:40.126+08:00\",\"DeletedAt\":null,\"Key\":\"46372e8648989e4c62b21193f6ce9bc0e0a10e51da07d6e43c3b2de46c44c0d3\",\"ArticleID\":0,\"Abstract\":\"文章分析了 GORM 框架中四个核心方法的行为特征：1) First() 未查询到数据时返回 gorm.ErrRecordNotFound；2) Create() 插入失败时错误类型包含约束冲突/数据类型不匹配/连接问题；3) Update() 数据未变化时 RowsAffected 返回 0；4) Delete() 数据不存在时 error 为 nil 但 RowsAffected 为 0。\",\"Summary\":\"文章详细解构了 GORM ORM 框架在 CRUD 操作中的异常处理机制，重点阐述了不同方法在数据不存在/数据冲突/数据未变更等场景下的返回值特征，并提供了错误类型判断和事务回滚的实践建议。\",\"VisitCount\":0}"}
{"level":"debug","ts":"2025-05-27T08:27:50.975+0800","caller":"cache/cache_manager.go:144","msg":"缓存设置成功","key":"article:0","type":"article","expiration":259200,"data":"{\"ID\":259,\"CreatedAt\":\"2025-05-02T01:36:17.481+08:00\",\"UpdatedAt\":\"2025-05-02T01:36:17.481+08:00\",\"DeletedAt\":null,\"Key\":\"0e67e8a86cac5209b4c3d735112c843aae2dc7e55f00704bf24fbbda24fd3a8e\",\"ArticleID\":0,\"Abstract\":\"文章分析了 GORM 框架中四个核心方法的行为特征：1) First() 未查询到数据时返回 gorm.ErrRecordNotFound；2) Create() 插入失败时错误类型包含约束冲突/数据类型不匹配/连接问题；3) Update() 数据未变化时 RowsAffected 返回 0；4) Delete() 数据不存在时 error 为 nil 但 RowsAffected 为 0。\",\"Summary\":\"文章详细解构了 GORM ORM 框架在 CRUD 操作中的异常处理机制，重点阐述了不同方法在数据不存在/数据冲突/数据未变更等场景下的返回值特征，并提供了错误类型判断和事务回滚的实践建议。\",\"VisitCount\":0}"}
{"level":"debug","ts":"2025-05-27T08:27:50.994+0800","caller":"cache/cache_manager.go:144","msg":"缓存设置成功","key":"article:0","type":"article","expiration":259200,"data":"{\"ID\":260,\"CreatedAt\":\"2025-05-02T02:24:46.693+08:00\",\"UpdatedAt\":\"2025-05-02T02:24:46.693+08:00\",\"DeletedAt\":null,\"Key\":\"b553e6af4fb183a84375bf1e79a2be2768fc3c50344bff533a9baba97bd537fe\",\"ArticleID\":0,\"Abstract\":\"文章分析了 GORM 框架中四个核心方法的行为特征：1) First() 未查询到数据时返回 gorm.ErrRecordNotFound；2) Create() 插入失败时错误类型包含约束冲突/数据类型不匹配/连接问题；3) Update() 数据未变化时 RowsAffected 返回 0；4) Delete() 数据不存在时 error 为 nil 但 RowsAffected 为 0。\",\"Summary\":\"文章详细解构了 GORM ORM 框架在 CRUD 操作中的异常处理机制，重点阐述了不同方法在数据不存在/数据冲突/数据未变更等场景下的返回值特征，并提供了错误类型判断和事务回滚的实践建议。\",\"VisitCount\":0}"}
{"level":"debug","ts":"2025-05-27T08:27:51.017+0800","caller":"cache/cache_manager.go:144","msg":"缓存设置成功","key":"article:0","type":"article","expiration":259200,"data":"{\"ID\":261,\"CreatedAt\":\"2025-05-02T02:39:41.677+08:00\",\"UpdatedAt\":\"2025-05-02T02:39:41.677+08:00\",\"DeletedAt\":null,\"Key\":\"835d5e8314340ab852a2f979ab4cd53e994dbe38366afb6eed84fe4957b980c8\",\"ArticleID\":0,\"Abstract\":\"文章分析了 GORM 框架中四个核心方法的行为特征：1) First() 未查询到数据时返回 gorm.ErrRecordNotFound；2) Create() 插入失败时错误类型包含约束冲突/数据类型不匹配/连接问题；3) Update() 数据未变化时 RowsAffected 返回 0；4) Delete() 数据不存在时 error 为 nil 但 RowsAffected 为 0。\",\"Summary\":\"文章详细解构了 GORM ORM 框架在 CRUD 操作中的异常处理机制，重点阐述了不同方法在数据不存在/数据冲突/数据未变更等场景下的返回值特征，并提供了错误类型判断和事务回滚的实践建议。\",\"VisitCount\":0}"}
{"level":"debug","ts":"2025-05-27T08:27:51.053+0800","caller":"cache/cache_manager.go:144","msg":"缓存设置成功","key":"article:0","type":"article","expiration":259200,"data":"{\"ID\":262,\"CreatedAt\":\"2025-05-02T02:41:21.962+08:00\",\"UpdatedAt\":\"2025-05-02T02:41:21.962+08:00\",\"DeletedAt\":null,\"Key\":\"455473bb653666fcac550a5e00453a10783c44720a70e08e7f44d8b7498d522f\",\"ArticleID\":0,\"Abstract\":\"文章解析了 GORM 框架四个核心方法的异常处理机制：1) First() 未查询到数据返回 gorm.ErrRecordNotFound；2) Create() 插入失败涉及约束冲突/数据类型错误/连接异常；3) Update() 数据未修改时 RowsAffected 为 0；4) Delete() 数据不存在时 error 为 nil 但 RowsAffected 为 0。\",\"Summary\":\"文章系统梳理了 GORM 在 CRUD 操作中的差异化错误处理逻辑，明确不同方法在数据异常场景（如记录缺失、约束冲突、无变更操作）下的返回值规则，并强调通过错误类型判断和 RowsAffected 值实现精准的事务控制。\",\"VisitCount\":0}"}
{"level":"debug","ts":"2025-05-27T08:27:51.091+0800","caller":"cache/cache_manager.go:144","msg":"缓存设置成功","key":"article:0","type":"article","expiration":259200,"data":"{\"ID\":263,\"CreatedAt\":\"2025-05-02T02:42:00.185+08:00\",\"UpdatedAt\":\"2025-05-02T02:42:00.185+08:00\",\"DeletedAt\":null,\"Key\":\"6f4b6612125fb3a0daecd2799dfd6c9c299424fd920f9b308110a2c1fbd8f443\",\"ArticleID\":0,\"Abstract\":\"文章解析了 GORM 框架四个核心方法的行为特征：1) First() 未查询到数据返回 gorm.ErrRecordNotFound；2) Create() 插入失败包含约束冲突/数据类型错误/连接异常；3) Update() 数据未修改时 RowsAffected 为 0；4) Delete() 数据不存在时 error 为空但 RowsAffected 为 0。\",\"Summary\":\"文章系统梳理了 GORM 框架在 CRUD 操作中的异常处理逻辑，明确不同方法在数据缺失/冲突/无变更场景下的返回值差异，并给出错误类型识别与事务处理的开发指导。\",\"VisitCount\":0}"}
{"level":"debug","ts":"2025-05-27T08:27:51.130+0800","caller":"cache/cache_manager.go:144","msg":"缓存设置成功","key":"article:0","type":"article","expiration":259200,"data":"{\"ID\":264,\"CreatedAt\":\"2025-05-02T03:15:13.063+08:00\",\"UpdatedAt\":\"2025-05-02T03:15:13.063+08:00\",\"DeletedAt\":null,\"Key\":\"521ea9c60b025d7ac36b93e3af4d3a6aeb3a400c01f198d14d4768e0862762ab\",\"ArticleID\":0,\"Abstract\":\"文章解析了 GORM 框架四个核心方法的异常处理机制：1) First() 未查询到数据返回 gorm.ErrRecordNotFound；2) Create() 插入失败包含约束冲突/数据类型错误/连接异常；3) Update() 数据未修改时 RowsAffected 为 0；4) Delete() 数据不存在时 error 为 nil 但 RowsAffected 为 0。\",\"Summary\":\"文章系统梳理了 GORM 框架在 CRUD 操作中的异常处理逻辑，明确不同方法在数据缺失/冲突/未变更等场景的返回值差异，并给出错误类型识别与事务处理的工程实践指导。\",\"VisitCount\":0}"}
{"level":"debug","ts":"2025-05-27T08:27:51.144+0800","caller":"cache/cache_manager.go:144","msg":"缓存设置成功","key":"article:0","type":"article","expiration":259200,"data":"{\"ID\":265,\"CreatedAt\":\"2025-05-02T03:15:54.862+08:00\",\"UpdatedAt\":\"2025-05-02T03:15:54.862+08:00\",\"DeletedAt\":null,\"Key\":\"98f1f17f9a73ccfe3e25940add8d9ce9bf05513104cacb84f2f1185bf5886a84\",\"ArticleID\":0,\"Abstract\":\"文章分析了 GORM 框架中四个核心方法的行为特征：1) First() 未查询到数据时返回 gorm.ErrRecordNotFound；2) Create() 插入失败时错误类型包含约束冲突/数据类型不匹配/连接问题；3) Update() 数据未变化时 RowsAffected 返回 0；4) Delete() 数据不存在时 error 为 nil 但 RowsAffected 为 0。\",\"Summary\":\"文章详细解构了 GORM ORM 框架在 CRUD 操作中的异常处理机制，重点阐述了不同方法在数据不存在/数据冲突/数据未变更等场景下的返回值特征，并提供了错误类型判断和事务回滚的实践建议。\",\"VisitCount\":0}"}
{"level":"debug","ts":"2025-05-27T08:27:51.161+0800","caller":"cache/cache_manager.go:144","msg":"缓存设置成功","key":"article:0","type":"article","expiration":259200,"data":"{\"ID\":266,\"CreatedAt\":\"2025-05-02T03:25:22.766+08:00\",\"UpdatedAt\":\"2025-05-02T03:25:22.766+08:00\",\"DeletedAt\":null,\"Key\":\"814bb6b8dc12188a44b71e378dc20a4292e01979aa9ab95b09b8a681391dfc9d\",\"ArticleID\":0,\"Abstract\":\"文章解析了 GORM 框架四个核心方法的异常处理机制：1) First() 未查询到数据返回特定错误类型；2) Create() 插入失败包含多种错误类型判断；3) Update() 数据未变更时返回 0 影响行数；4) Delete() 数据不存在时返回空错误但影响行数为 0。\",\"Summary\":\"文章系统梳理了 GORM ORM 框架在 CRUD 操作中的错误反馈模式，重点对比不同方法在数据异常场景下的返回值差异，并给出基于错误类型判断实现事务回滚的工程实践指导。\",\"VisitCount\":0}"}
{"level":"debug","ts":"2025-05-27T08:27:51.195+0800","caller":"cache/cache_manager.go:144","msg":"缓存设置成功","key":"article:0","type":"article","expiration":259200,"data":"{\"ID\":267,\"CreatedAt\":\"2025-05-02T03:29:30.926+08:00\",\"UpdatedAt\":\"2025-05-02T03:29:30.926+08:00\",\"DeletedAt\":null,\"Key\":\"78a69c6fdc7b95f502f14d3c826b21528318ef248796d5a41478096973dd1ad6\",\"ArticleID\":0,\"Abstract\":\"文章分析了 GORM 框架中四个核心方法的行为特征：1) First() 未查询到数据时返回 gorm.ErrRecordNotFound；2) Create() 插入失败时错误类型包含约束冲突/数据类型不匹配/连接问题；3) Update() 数据未变化时 RowsAffected 返回 0；4) Delete() 数据不存在时 error 为 nil 但 RowsAffected 为 0。\",\"Summary\":\"文章详细解构了 GORM ORM 框架在 CRUD 操作中的异常处理机制，重点阐述了不同方法在数据不存在/数据冲突/数据未变更等场景下的返回值特征，并提供了错误类型判断和事务回滚的实践建议。\",\"VisitCount\":0}"}
{"level":"debug","ts":"2025-05-27T08:27:51.223+0800","caller":"cache/cache_manager.go:144","msg":"缓存设置成功","key":"article:0","type":"article","expiration":259200,"data":"{\"ID\":268,\"CreatedAt\":\"2025-05-02T06:39:54.453+08:00\",\"UpdatedAt\":\"2025-05-02T06:39:54.453+08:00\",\"DeletedAt\":null,\"Key\":\"8d23cf6c86e834a7aa6eded54c26ce2bb2e74903538c61bdd5d2197997ab2f72\",\"ArticleID\":0,\"Abstract\":\"文章解析了 GORM 框架四个核心方法的行为特征：1) First() 未查询到数据返回 gorm.ErrRecordNotFound；2) Create() 插入失败包含约束冲突/数据类型错误/连接异常；3) Update() 数据未修改时 RowsAffected 显示 0；4) Delete() 数据不存在时 error 为空但 RowsAffected 为 0。\",\"Summary\":\"文章系统剖析了 GORM 框架在 CRUD 操作中的异常处理逻辑，明确不同方法在数据缺失/约束冲突/数据未更新等场景的返回值规则，同时给出错误类型识别与事务处理的开发指导。\",\"VisitCount\":0}"}
{"level":"debug","ts":"2025-05-27T08:27:51.259+0800","caller":"cache/cache_manager.go:144","msg":"缓存设置成功","key":"article:0","type":"article","expiration":259200,"data":"{\"ID\":256,\"CreatedAt\":\"2025-05-02T01:24:14.611+08:00\",\"UpdatedAt\":\"2025-05-02T01:24:14.611+08:00\",\"DeletedAt\":null,\"Key\":\"3c15285c04fff40024bb8714b93e58178bf8d3bebe6943178e1c5412957b7aa1\",\"ArticleID\":0,\"Abstract\":\"文章解析了 GORM 框架四个核心方法的行为特征：1) First() 未查询到数据时返回 gorm.ErrRecordNotFound；2) Create() 插入失败时错误类型包含约束冲突/数据类型不匹配/连接问题；3) Update() 数据未变化时 RowsAffected 返回 0；4) Delete() 数据不存在时 error 为 nil 但 RowsAffected 为 0。\",\"Summary\":\"文章系统剖析了 GORM ORM 框架在 CRUD 操作中的异常处理逻辑，明确指出了不同方法在数据不存在、约束冲突、数据未变更等场景下的返回值差异，并给出错误类型判断与事务处理的实战指导。\",\"VisitCount\":0}"}
{"level":"debug","ts":"2025-05-27T08:27:51.276+0800","caller":"cache/cache_manager.go:144","msg":"缓存设置成功","key":"article:0","type":"article","expiration":259200,"data":"{\"ID\":270,\"CreatedAt\":\"2025-05-02T06:51:52.339+08:00\",\"UpdatedAt\":\"2025-05-02T06:51:52.339+08:00\",\"DeletedAt\":null,\"Key\":\"eb1e33e8a81b697b75855af6bfcdbcbf7cbbde9f94962ceaec1ed8af21f5a50f\",\"ArticleID\":0,\"Abstract\":\"文章分析了 GORM 框架中四个核心方法的行为特征：1) First() 未查询到数据时返回 gorm.ErrRecordNotFound；2) Create() 插入失败时错误类型包含约束冲突/数据类型不匹配/连接问题；3) Update() 数据未变化时 RowsAffected 返回 0；4) Delete() 数据不存在时 error 为 nil 但 RowsAffected 为 0。\",\"Summary\":\"文章详细解构了 GORM ORM 框架在 CRUD 操作中的异常处理机制，重点阐述了不同方法在数据不存在/数据冲突/数据未变更等场景下的返回值特征，并提供了错误类型判断和事务回滚的实践建议。\",\"VisitCount\":0}"}
{"level":"debug","ts":"2025-05-27T08:27:51.302+0800","caller":"cache/cache_manager.go:144","msg":"缓存设置成功","key":"article:0","type":"article","expiration":259200,"data":"{\"ID\":271,\"CreatedAt\":\"2025-05-02T07:05:50.267+08:00\",\"UpdatedAt\":\"2025-05-02T07:05:50.267+08:00\",\"DeletedAt\":null,\"Key\":\"72440a20f54075ac43f51a2cf0dbb2a14366b38a5c01b110ae174abc1cb44238\",\"ArticleID\":0,\"Abstract\":\"文章解析了 GORM 框架四个核心方法的异常处理特征：1) First() 未查询到数据返回 gorm.ErrRecordNotFound；2) Create() 插入失败包含约束冲突/数据类型错误/连接异常；3) Update() 数据未修改时 RowsAffected 为 0；4) Delete() 数据不存在时 error 为 nil 但 RowsAffected 为 0。\",\"Summary\":\"文章系统剖析了 GORM 框架在 CRUD 操作中的错误处理逻辑，明确不同方法在数据缺失、约束冲突、数据未变更等场景的返回值差异，并给出错误类型判定与事务处理的工程实践指导。\",\"VisitCount\":0}"}
{"level":"debug","ts":"2025-05-27T08:27:51.305+0800","caller":"cache/cache_manager.go:144","msg":"缓存设置成功","key":"article:0","type":"article","expiration":259200,"data":"{\"ID\":272,\"CreatedAt\":\"2025-05-02T07:22:00.69+08:00\",\"UpdatedAt\":\"2025-05-02T07:22:00.69+08:00\",\"DeletedAt\":null,\"Key\":\"02d20bbd7e394ad5999a4cebabac9619732c343a4cac99470c03e23ba2bdc2bc\",\"ArticleID\":0,\"Abstract\":\"文章分析了 GORM 框架中四个核心方法的行为特征：1) First() 未查询到数据时返回 gorm.ErrRecordNotFound；2) Create() 插入失败时错误类型包含约束冲突、数据类型不匹配和连接问题；3) Update() 数据未变化时 RowsAffected 返回 0；4) Delete() 数据不存在时 error 为 nil 但 RowsAffected 为 0。\",\"Summary\":\"文章详细解构了 GORM ORM 框架在 CRUD 操作中的异常处理机制，重点阐述了不同方法在数据不存在、数据冲突、数据未变更等场景下的返回值特征，并提供了错误类型判断和事务回滚的实践建议。\",\"VisitCount\":0}"}
{"level":"debug","ts":"2025-05-27T08:27:51.354+0800","caller":"cache/cache_manager.go:144","msg":"缓存设置成功","key":"article:198","type":"article","expiration":259200,"data":"{\"ID\":276,\"CreatedAt\":\"2025-05-02T11:49:10.953+08:00\",\"UpdatedAt\":\"2025-05-02T11:49:10.953+08:00\",\"DeletedAt\":null,\"Key\":\"61e944c39aad9f7fc90d41ed6bbc97b900ba215daab120bc3915f6a99a39340b\",\"ArticleID\":198,\"Abstract\":\"文章系统阐述了《弟子规》的核心行为规范体系，包含总叙、入则孝、出则悌、谨四个篇章，具体涉及孝道实践（父母呼应勿缓）、兄弟相处（财物轻怨何生）、生活礼仪（晨必盥兼漱口）等传统道德准则。\",\"Summary\":\"该文完整呈现了儒家启蒙经典《弟子规》的完整文本结构，通过三字韵文形式系统规范了古代儿童在家庭伦理、社交礼仪、行为习惯等方面的具体要求，体现了孝悌仁爱、谨言慎行的传统教育思想。\",\"VisitCount\":0}"}
{"level":"debug","ts":"2025-05-27T08:27:51.376+0800","caller":"cache/cache_manager.go:144","msg":"缓存设置成功","key":"article:0","type":"article","expiration":259200,"data":"{\"ID\":277,\"CreatedAt\":\"2025-05-02T12:05:32.246+08:00\",\"UpdatedAt\":\"2025-05-02T12:05:32.246+08:00\",\"DeletedAt\":null,\"Key\":\"242ecc061256959a4a779496a69524518623527c8c53d039848351822cc8d311\",\"ArticleID\":0,\"Abstract\":\"文章分析了 GORM 框架中四个核心方法的行为特征：1) First() 未查询到数据时返回 gorm.ErrRecordNotFound；2) Create() 插入失败时错误类型包含约束冲突/数据类型不匹配/连接问题；3) Update() 数据未变化时 RowsAffected 返回 0；4) Delete() 数据不存在时 error 为 nil 但 RowsAffected 为 0。\",\"Summary\":\"文章详细解构了 GORM ORM 框架在 CRUD 操作中的异常处理机制，重点阐述了不同方法在数据不存在/数据冲突/数据未变更等场景下的返回值特征，并提供了错误类型判断和事务回滚的实践建议。\",\"VisitCount\":0}"}
{"level":"debug","ts":"2025-05-27T08:27:51.378+0800","caller":"cache/cache_manager.go:144","msg":"缓存设置成功","key":"article:213","type":"article","expiration":259200,"data":"{\"ID\":291,\"CreatedAt\":\"2025-05-02T12:46:12.941+08:00\",\"UpdatedAt\":\"2025-05-02T12:46:12.941+08:00\",\"DeletedAt\":null,\"Key\":\"730f75dafd73e047b86acb2dbd74e75dcb93272fa084a9082848f2341aa1abb6\",\"ArticleID\":213,\"Abstract\":\"文章分析了 GORM 框架中四个核心方法的行为特征：1) First() 未查询到数据时返回 gorm.ErrRecordNotFound；2) Create() 插入失败时错误类型包含约束冲突/数据类型不匹配/连接问题；3) Update() 数据未变化时 RowsAffected 返回 0；4) Delete() 数据不存在时 error 为 nil 但 RowsAffected 为 0。\",\"Summary\":\"文章详细解构了 GORM ORM 框架在 CRUD 操作中的异常处理机制，重点阐述了不同方法在数据不存在/数据冲突/数据未变更等场景下的返回值特征，并提供了错误类型判断和事务回滚的实践建议。\",\"VisitCount\":0}"}
{"level":"debug","ts":"2025-05-27T08:27:51.410+0800","caller":"cache/cache_manager.go:144","msg":"缓存设置成功","key":"article:0","type":"article","expiration":259200,"data":"{\"ID\":292,\"CreatedAt\":\"2025-05-02T12:52:44.389+08:00\",\"UpdatedAt\":\"2025-05-02T12:52:44.389+08:00\",\"DeletedAt\":null,\"Key\":\"afbd9fa69b7b567d901b5f28c0d91f69707fda75d27a11dfb98d3e3841724f19\",\"ArticleID\":0,\"Abstract\":\"文章分析了 GORM 框架中四个核心方法的行为特征：1) First() 未查询到数据时返回 gorm.ErrRecordNotFound；2) Create() 插入失败时错误类型包含约束冲突/数据类型不匹配/连接问题；3) Update() 数据未变化时 RowsAffected 返回 0；4) Delete() 数据不存在时 error 为 nil 但 RowsAffected 为 0。\",\"Summary\":\"文章详细解构了 GORM ORM 框架在 CRUD 操作中的异常处理机制，重点阐述了不同方法在数据不存在/数据冲突/数据未变更等场景下的返回值特征，并提供了错误类型判断和事务回滚的实践建议。\",\"VisitCount\":0}"}
{"level":"debug","ts":"2025-05-27T08:27:51.433+0800","caller":"cache/cache_manager.go:144","msg":"缓存设置成功","key":"article:0","type":"article","expiration":259200,"data":"{\"ID\":293,\"CreatedAt\":\"2025-05-02T12:56:54.5+08:00\",\"UpdatedAt\":\"2025-05-02T12:56:54.5+08:00\",\"DeletedAt\":null,\"Key\":\"49cbe57e9503aa0c6d0cf1f88ec2b8e1dfb870c346fb9c82bc0489915108d75a\",\"ArticleID\":0,\"Abstract\":\"文章分析了 GORM 框架中四个核心方法的行为特征：1) First() 未查询到数据时返回 gorm.ErrRecordNotFound；2) Create() 插入失败时错误类型包含约束冲突/数据类型不匹配/连接问题；3) Update() 数据未变化时 RowsAffected 返回 0；4) Delete() 数据不存在时 error 为 nil 但 RowsAffected 为 0。\",\"Summary\":\"文章详细解构了 GORM ORM 框架在 CRUD 操作中的异常处理机制，重点阐述了不同方法在数据不存在/数据冲突/数据未变更等场景下的返回值特征，并提供了错误类型判断和事务回滚的实践建议。\",\"VisitCount\":0}"}
{"level":"debug","ts":"2025-05-27T08:27:51.451+0800","caller":"cache/cache_manager.go:144","msg":"缓存设置成功","key":"article:0","type":"article","expiration":259200,"data":"{\"ID\":294,\"CreatedAt\":\"2025-05-02T12:57:01.049+08:00\",\"UpdatedAt\":\"2025-05-02T12:57:01.049+08:00\",\"DeletedAt\":null,\"Key\":\"3b395c46ec8489e20e985b02fe317eb04965e9f3c11f45186fd54c51af9cd1b4\",\"ArticleID\":0,\"Abstract\":\"文章分析了 GORM 框架中四个核心方法的行为特征：1) First() 未查询到数据时返回 gorm.ErrRecordNotFound；2) Create() 插入失败时错误类型包含约束冲突/数据类型不匹配/连接问题；3) Update() 数据未变化时 RowsAffected 返回 0；4) Delete() 数据不存在时 error 为 nil 但 RowsAffected 为 0。\",\"Summary\":\"文章详细解构了 GORM ORM 框架在 CRUD 操作中的异常处理机制，重点阐述了不同方法在数据不存在/数据冲突/数据未变更等场景下的返回值特征，并提供了错误类型判断和事务回滚的实践建议。\",\"VisitCount\":0}"}
{"level":"debug","ts":"2025-05-27T08:27:51.465+0800","caller":"cache/cache_manager.go:144","msg":"缓存设置成功","key":"article:0","type":"article","expiration":259200,"data":"{\"ID\":295,\"CreatedAt\":\"2025-05-02T12:57:33.072+08:00\",\"UpdatedAt\":\"2025-05-02T12:57:33.072+08:00\",\"DeletedAt\":null,\"Key\":\"eb83b900f20760249fa1f3342eeb9efda14da7d5701eb3eb1e8e1169aadb5921\",\"ArticleID\":0,\"Abstract\":\"文章分析了 GORM 框架中四个核心方法的行为特征：1) First() 未查询到数据时返回 gorm.ErrRecordNotFound；2) Create() 插入失败时错误类型包含约束冲突/数据类型不匹配/连接问题；3) Update() 数据未变化时 RowsAffected 返回 0；4) Delete() 数据不存在时 error 为 nil 但 RowsAffected 为 0。\",\"Summary\":\"文章详细解构了 GORM ORM 框架在 CRUD 操作中的异常处理机制，重点阐述了不同方法在数据不存在/数据冲突/数据未变更等场景下的返回值特征，并提供了错误类型判断和事务回滚的实践建议。\",\"VisitCount\":0}"}
{"level":"info","ts":"2025-05-27T08:27:51.465+0800","caller":"cache/cache_manager.go:240","msg":"文章缓存预热完成","count":50}
{"level":"info","ts":"2025-05-27T08:27:51.465+0800","caller":"cache/cache_manager.go:184","msg":"缓存预热完成"}
{"level":"warn","ts":"2025-05-27T08:27:53.130+0800","caller":"v3@v3.5.12/retry_interceptor.go:62","msg":"retrying of unary invoker failed","target":"etcd-endpoints://0xc000506a80/127.0.0.1:2379","attempt":0,"error":"rpc error: code = DeadlineExceeded desc = latest balancer error: connection error: desc = \"transport: Error while dialing: dial tcp 127.0.0.1:2379: connectex: No connection could be made because the target machine actively refused it.\""}
{"level":"error","ts":"2025-05-27T08:27:53.130+0800","caller":"server/main.go:78","msg":"创建 etcd 实例失败: 验证端点有效性失败 cli.Status() 127.0.0.1:2379: context deadline exceeded"}
{"level":"info","ts":"2025-05-27T08:34:29.625+0800","caller":"server/main.go:33","msg":"config初始化成功: config.Config{Server:struct { Port string \"mapstructure:\\\"port\\\"\" }{Port:\"50051\"}, MySQL:struct { Host string \"mapstructure:\\\"host\\\"\"; Port int \"mapstructure:\\\"port\\\"\"; Username string \"mapstructure:\\\"username\\\"\"; Password string \"mapstructure:\\\"password\\\"\"; DBName string \"mapstructure:\\\"dbname\\\"\"; ParseTime bool \"mapstructure:\\\"parseTime\\\"\" }{Host:\"192.168.10.4\", Port:3310, Username:\"root\", Password:\"123456\", DBName:\"siwuai\", ParseTime:false}, Etcd:struct { Endpoints []string \"mapstructure:\\\"endpoints\\\"\"; ServiceName string \"mapstructure:\\\"serviceName\\\"\"; ServiceAddr string \"mapstructure:\\\"serviceAddr\\\"\"; TTL int64 \"mapstructure:\\\"ttl\\\"\" }{Endpoints:[]string{\"127.0.0.1:2379\"}, ServiceName:\"/services/siwuai\", ServiceAddr:\"127.0.0.1:50051\", TTL:5}, Redis:struct { Addr string \"mapstructure:\\\"addr\\\"\"; Password string \"mapstructure:\\\"password\\\"\"; DB int \"mapstructure:\\\"db\\\"\"; Timeout int \"mapstructure:\\\"timeout\\\"\" }{Addr:\"192.168.10.4:6379\", Password:\"123456\", DB:0, Timeout:5}, Logger:struct { LogPath string \"mapstructure:\\\"logPath\\\"\"; AppName string \"mapstructure:\\\"appName\\\"\"; Level int8 \"mapstructure:\\\"level\\\"\" }{LogPath:\"./logs\", AppName:\"siwuai\", Level:-1}, Token:struct { SecretKey string \"mapstructure:\\\"secretKey\\\"\"; GenerateTokenKey string \"mapstructure:\\\"generateTokenKey\\\"\" }{SecretKey:\"123456\", GenerateTokenKey:\"123456\"}, Llm:struct { ApiKey string \"mapstructure:\\\"apiKey\\\"\"; Model string \"mapstructure:\\\"model\\\"\"; BaseURL string \"mapstructure:\\\"baseURL\\\"\"; TemperatureCode float64 \"mapstructure:\\\"temperatureCode\\\"\"; TemperatureArticle float64 \"mapstructure:\\\"temperatureArticle\\\"\" }{ApiKey:\"18e25f60-6aff-418f-96fe-55b8cee6a273\", Model:\"deepseek-r1-250120\", BaseURL:\"https://ark.cn-beijing.volces.com/api/v3\", TemperatureCode:0, TemperatureArticle:1}}\n"}
{"level":"info","ts":"2025-05-27T08:34:31.732+0800","caller":"server/main.go:41","msg":"初始化 MySQL 成功"}
{"level":"info","ts":"2025-05-27T08:34:31.920+0800","caller":"server/main.go:50","msg":" 初始化 Redis 成功"}
{"level":"info","ts":"2025-05-27T08:34:32.067+0800","caller":"utils/bloom_filter_manager.go:133","msg":"布隆过滤器初始化完成，共加载 408 条记录"}
{"level":"info","ts":"2025-05-27T08:34:32.067+0800","caller":"utils/bloom_filter.go:33","msg":"BloomFilter 加载完成，使用动态参数调整和定期重建机制"}
{"level":"info","ts":"2025-05-27T08:34:32.071+0800","caller":"cache/local_cache.go:43","msg":"本地缓存(BigCache)初始化成功"}
{"level":"info","ts":"2025-05-27T08:34:32.071+0800","caller":"cache/cache_manager.go:74","msg":"多级缓存管理器初始化成功"}
{"level":"info","ts":"2025-05-27T08:34:32.071+0800","caller":"cache/cache_manager.go:176","msg":"开始缓存预热..."}
{"level":"debug","ts":"2025-05-27T08:34:32.072+0800","caller":"v3@v3.5.12/retry_interceptor.go:53","msg":"retrying of unary invoker","target":"etcd-endpoints://0xc0004d4a80/127.0.0.1:2379","attempt":0}
{"level":"debug","ts":"2025-05-27T08:34:32.170+0800","caller":"cache/cache_manager.go:144","msg":"缓存设置成功","key":"article:0","type":"article","expiration":259200,"data":"{\"ID\":310,\"CreatedAt\":\"2025-05-02T14:13:28.97+08:00\",\"UpdatedAt\":\"2025-05-02T14:13:28.97+08:00\",\"DeletedAt\":null,\"Key\":\"535fa30d7e25dd8a49f1536779734ec8286108d115da5045d77f3b4185d8f790\",\"ArticleID\":0,\"Abstract\":\"文章分析了 GORM 框架中四个核心方法的行为特征：1) First() 未查询到数据时返回 gorm.ErrRecordNotFound；2) Create() 插入失败时错误类型包含约束冲突/数据类型不匹配/连接问题；3) Update() 数据未变化时 RowsAffected 返回 0；4) Delete() 数据不存在时 error 为 nil 但 RowsAffected 为 0。\",\"Summary\":\"文章详细解构了 GORM ORM 框架在 CRUD 操作中的异常处理机制，重点阐述了不同方法在数据不存在/数据冲突/数据未变更等场景下的返回值特征，并提供了错误类型判断和事务回滚的实践建议。\",\"VisitCount\":0}"}
{"level":"debug","ts":"2025-05-27T08:34:32.186+0800","caller":"cache/cache_manager.go:144","msg":"缓存设置成功","key":"article:219","type":"article","expiration":259200,"data":"{\"ID\":298,\"CreatedAt\":\"2025-05-02T12:58:35.168+08:00\",\"UpdatedAt\":\"2025-05-02T12:58:35.168+08:00\",\"DeletedAt\":null,\"Key\":\"9834876dcfb05cb167a5c24953eba58c4ac89b1adf57f28f2f9d09af107ee8f0\",\"ArticleID\":219,\"Abstract\":\"文章内容存在异常，仅包含无意义字符\\\"aaa\\\"，无法提取有效技术信息\",\"Summary\":\"输入文本不符合技术文档规范，需提供完整的GORM框架技术解析内容才能进行有效分析\",\"VisitCount\":0}"}
{"level":"debug","ts":"2025-05-27T08:34:32.204+0800","caller":"cache/cache_manager.go:144","msg":"缓存设置成功","key":"article:0","type":"article","expiration":259200,"data":"{\"ID\":299,\"CreatedAt\":\"2025-05-02T13:17:15.799+08:00\",\"UpdatedAt\":\"2025-05-02T13:17:15.799+08:00\",\"DeletedAt\":null,\"Key\":\"8091efe97affa5ba5d7d8ea1aa14b037461433c4e890d45b188648d996790ed6\",\"ArticleID\":0,\"Abstract\":\"文章分析了 GORM 框架中四个核心方法的行为特征：1) First() 未查询到数据时返回 gorm.ErrRecordNotFound；2) Create() 插入失败时错误类型包含约束冲突/数据类型不匹配/连接问题；3) Update() 数据未变化时 RowsAffected 返回 0；4) Delete() 数据不存在时 error 为 nil 但 RowsAffected 为 0。\",\"Summary\":\"文章详细解构了 GORM ORM 框架在 CRUD 操作中的异常处理机制，重点阐述了不同方法在数据不存在/数据冲突/数据未变更等场景下的返回值特征，并提供了错误类型判断和事务回滚的实践建议。\",\"VisitCount\":0}"}
{"level":"debug","ts":"2025-05-27T08:34:32.241+0800","caller":"cache/cache_manager.go:144","msg":"缓存设置成功","key":"article:0","type":"article","expiration":259200,"data":"{\"ID\":300,\"CreatedAt\":\"2025-05-02T13:22:51.256+08:00\",\"UpdatedAt\":\"2025-05-02T13:22:51.256+08:00\",\"DeletedAt\":null,\"Key\":\"bcb15f821479b4d5772bd0ca866c00ad5f926e3580720659cc80d39c9d09802a\",\"ArticleID\":0,\"Abstract\":\"文章分析了 GORM 框架中四个核心方法的行为特征：1) First() 未查询到数据时返回 gorm.ErrRecordNotFound；2) Create() 插入失败时错误类型包含约束冲突/数据类型不匹配/连接问题；3) Update() 数据未变化时 RowsAffected 返回 0；4) Delete() 数据不存在时 error 为 nil 但 RowsAffected 为 0。\",\"Summary\":\"文章详细解构了 GORM ORM 框架在 CRUD 操作中的异常处理机制，重点阐述了不同方法在数据不存在/数据冲突/数据未变更等场景下的返回值特征，并提供了错误类型判断和事务回滚的实践建议。\",\"VisitCount\":0}"}
{"level":"debug","ts":"2025-05-27T08:34:32.248+0800","caller":"cache/cache_manager.go:144","msg":"缓存设置成功","key":"article:0","type":"article","expiration":259200,"data":"{\"ID\":301,\"CreatedAt\":\"2025-05-02T13:23:24.125+08:00\",\"UpdatedAt\":\"2025-05-02T13:23:24.125+08:00\",\"DeletedAt\":null,\"Key\":\"dd65c0a7536affef35f3383b9c1be5a8fe319f6a99c5c29a70f8c8b91ea8bba1\",\"ArticleID\":0,\"Abstract\":\"文章分析了 GORM 框架中四个核心方法的行为特征：1) First() 未查询到数据时返回 gorm.ErrRecordNotFound；2) Create() 插入失败时错误类型包含约束冲突/数据类型不匹配/连接问题；3) Update() 数据未变化时 RowsAffected 返回 0；4) Delete() 数据不存在时 error 为 nil 但 RowsAffected 为 0。\",\"Summary\":\"文章详细解构了 GORM ORM 框架在 CRUD 操作中的异常处理机制，重点阐述了不同方法在数据不存在/数据冲突/数据未变更等场景下的返回值特征，并提供了错误类型判断和事务回滚的实践建议。\",\"VisitCount\":0}"}
{"level":"debug","ts":"2025-05-27T08:34:32.270+0800","caller":"cache/cache_manager.go:144","msg":"缓存设置成功","key":"article:0","type":"article","expiration":259200,"data":"{\"ID\":302,\"CreatedAt\":\"2025-05-02T13:26:19.726+08:00\",\"UpdatedAt\":\"2025-05-02T13:26:19.726+08:00\",\"DeletedAt\":null,\"Key\":\"fe6340be87fd5e43b7f0cac5741e76205dd69a68b2024fda16c696848a720f7a\",\"ArticleID\":0,\"Abstract\":\"文章分析了 GORM 框架中四个核心方法的行为特征：1) First() 未查询到数据时返回 gorm.ErrRecordNotFound；2) Create() 插入失败时错误类型包含约束冲突/数据类型不匹配/连接问题；3) Update() 数据未变化时 RowsAffected 返回 0；4) Delete() 数据不存在时 error 为 nil 但 RowsAffected 为 0。\",\"Summary\":\"文章详细解构了 GORM ORM 框架在 CRUD 操作中的异常处理机制，重点阐述了不同方法在数据不存在/数据冲突/数据未变更等场景下的返回值特征，并提供了错误类型判断和事务回滚的实践建议。\",\"VisitCount\":0}"}
{"level":"debug","ts":"2025-05-27T08:34:32.276+0800","caller":"cache/cache_manager.go:144","msg":"缓存设置成功","key":"article:0","type":"article","expiration":259200,"data":"{\"ID\":303,\"CreatedAt\":\"2025-05-02T13:28:50.333+08:00\",\"UpdatedAt\":\"2025-05-02T13:28:50.333+08:00\",\"DeletedAt\":null,\"Key\":\"08dd19ebe332aeb67bca30589e54e627232949c7373d3e353f94c21f69a9d9c5\",\"ArticleID\":0,\"Abstract\":\"文章解析了 GORM 框架四个核心方法的异常处理机制：1) First() 未查询到数据返回 gorm.ErrRecordNotFound；2) Create() 插入失败包含约束冲突/数据类型错误/连接异常；3) Update() 数据未修改时 RowsAffected 为 0；4) Delete() 数据不存在时 error 为空但 RowsAffected 为 0。\",\"Summary\":\"文章系统梳理了 GORM 在 CRUD 操作中的错误反馈模式，重点说明不同方法在空查询/数据冲突/零变更等场景的返回值差异，并给出错误类型识别与事务处理的开发指导。\",\"VisitCount\":0}"}
{"level":"debug","ts":"2025-05-27T08:34:32.315+0800","caller":"cache/cache_manager.go:144","msg":"缓存设置成功","key":"article:0","type":"article","expiration":259200,"data":"{\"ID\":304,\"CreatedAt\":\"2025-05-02T13:35:21.924+08:00\",\"UpdatedAt\":\"2025-05-02T13:35:21.924+08:00\",\"DeletedAt\":null,\"Key\":\"cfae26288bd82e1a97669b7720470cf394e87b0e53bdd7e584055805cc63001f\",\"ArticleID\":0,\"Abstract\":\"文章解析了 GORM 框架四个核心方法的行为特征：1) First() 未查询到数据时返回特定错误类型；2) Create() 插入失败包含约束冲突等错误类型；3) Update() 数据未变化时返回 0 影响行数；4) Delete() 数据不存在时无错误但影响行数为 0。\",\"Summary\":\"文章系统梳理了 GORM 框架在 CRUD 操作中的异常处理逻辑，明确不同方法在数据冲突/不存在/未变更场景的返回值差异，并给出错误类型判断与事务处理的实践指导。\",\"VisitCount\":0}"}
{"level":"debug","ts":"2025-05-27T08:34:32.342+0800","caller":"cache/cache_manager.go:144","msg":"缓存设置成功","key":"article:0","type":"article","expiration":259200,"data":"{\"ID\":305,\"CreatedAt\":\"2025-05-02T13:37:45.413+08:00\",\"UpdatedAt\":\"2025-05-02T13:37:45.413+08:00\",\"DeletedAt\":null,\"Key\":\"27f200af7573aa4bf10b38a29b1a8fca4df35429b8a2f49cd827b87779ea978b\",\"ArticleID\":0,\"Abstract\":\"文章分析了 GORM 框架中四个核心方法的行为特征：1) First() 未查询到数据时返回 gorm.ErrRecordNotFound；2) Create() 插入失败时错误类型包含约束冲突/数据类型不匹配/连接问题；3) Update() 数据未变化时 RowsAffected 返回 0；4) Delete() 数据不存在时 error 为 nil 但 RowsAffected 为 0。\",\"Summary\":\"文章详细解构了 GORM ORM 框架在 CRUD 操作中的异常处理机制，重点阐述了不同方法在数据不存在/数据冲突/数据未变更等场景下的返回值特征，并提供了错误类型判断和事务回滚的实践建议。\",\"VisitCount\":0}"}
{"level":"debug","ts":"2025-05-27T08:34:32.371+0800","caller":"cache/cache_manager.go:144","msg":"缓存设置成功","key":"article:0","type":"article","expiration":259200,"data":"{\"ID\":306,\"CreatedAt\":\"2025-05-02T13:38:41.363+08:00\",\"UpdatedAt\":\"2025-05-02T13:38:41.363+08:00\",\"DeletedAt\":null,\"Key\":\"4a3ea36e79755b7eaad63e776b6d74f26b833410d08f7bc978330fddafe5844e\",\"ArticleID\":0,\"Abstract\":\"文章解析了 GORM 框架四个核心方法的异常处理机制：1) First() 未查询到数据返回 gorm.ErrRecordNotFound；2) Create() 插入失败包含约束冲突/数据类型错误/连接异常；3) Update() 数据未修改时 RowsAffected 为 0；4) Delete() 数据不存在时 error 为 nil 但 RowsAffected 为 0。\",\"Summary\":\"文章系统梳理了 GORM ORM 框架在 CRUD 操作中的错误反馈模式，重点对比不同方法在数据缺失/操作无效/执行失败等场景的返回值差异，并给出错误类型识别与事务处理的开发指导。\",\"VisitCount\":0}"}
{"level":"debug","ts":"2025-05-27T08:34:32.402+0800","caller":"cache/cache_manager.go:144","msg":"缓存设置成功","key":"article:0","type":"article","expiration":259200,"data":"{\"ID\":307,\"CreatedAt\":\"2025-05-02T13:38:50.781+08:00\",\"UpdatedAt\":\"2025-05-02T13:38:50.781+08:00\",\"DeletedAt\":null,\"Key\":\"5b0345f377ea69318b5f70d9a20d31cb42bac9a599188ceab6d5b5d00d7726ef\",\"ArticleID\":0,\"Abstract\":\"文章解析了 GORM 框架四个核心方法的行为特征：1) First() 未查询到数据时返回 gorm.ErrRecordNotFound；2) Create() 插入失败包含约束冲突/数据类型错误/连接异常；3) Update() 数据未修改时 RowsAffected 为 0；4) Delete() 数据不存在时 error 为 nil 但 RowsAffected 为 0。\",\"Summary\":\"文章系统剖析了 GORM 在 CRUD 操作中的异常处理逻辑，明确不同方法在空查询/数据冲突/无变更等场景的返回值差异，并给出错误类型识别与事务处理的工程实践指导。\",\"VisitCount\":0}"}
{"level":"debug","ts":"2025-05-27T08:34:32.431+0800","caller":"cache/cache_manager.go:144","msg":"缓存设置成功","key":"article:0","type":"article","expiration":259200,"data":"{\"ID\":308,\"CreatedAt\":\"2025-05-02T13:46:12.474+08:00\",\"UpdatedAt\":\"2025-05-02T13:46:12.474+08:00\",\"DeletedAt\":null,\"Key\":\"688787d8ff144c502c7f5cffaafe2cc588d86079f9de88304c26b0cb99ce91c6\",\"ArticleID\":0,\"Abstract\":\"文章分析了 GORM 框架中四个核心方法的行为特征：1) First() 未查询到数据时返回 gorm.ErrRecordNotFound；2) Create() 插入失败时错误类型包含约束冲突/数据类型不匹配/连接问题；3) Update() 数据未变化时 RowsAffected 返回 0；4) Delete() 数据不存在时 error 为 nil 但 RowsAffected 为 0。\",\"Summary\":\"文章详细解构了 GORM ORM 框架在 CRUD 操作中的异常处理机制，重点阐述了不同方法在数据不存在/数据冲突/数据未变更等场景下的返回值特征，并提供了错误类型判断和事务回滚的实践建议。\",\"VisitCount\":0}"}
{"level":"debug","ts":"2025-05-27T08:34:32.464+0800","caller":"cache/cache_manager.go:144","msg":"缓存设置成功","key":"article:0","type":"article","expiration":259200,"data":"{\"ID\":309,\"CreatedAt\":\"2025-05-02T13:52:17.664+08:00\",\"UpdatedAt\":\"2025-05-02T13:52:17.664+08:00\",\"DeletedAt\":null,\"Key\":\"19c451aedfb24c338a9a2a5c31d553ed77e7cdefc655035f390176ac24066051\",\"ArticleID\":0,\"Abstract\":\"文章分析了 GORM 框架中四个核心方法的行为特征：1) First() 未查询到数据时返回 gorm.ErrRecordNotFound；2) Create() 插入失败时错误类型包含约束冲突/数据类型不匹配/连接问题；3) Update() 数据未变化时 RowsAffected 返回 0；4) Delete() 数据不存在时 error 为 nil 但 RowsAffected 为 0。\",\"Summary\":\"文章详细解构了 GORM ORM 框架在 CRUD 操作中的异常处理机制，重点阐述了不同方法在数据不存在/数据冲突/数据未变更等场景下的返回值特征，并提供了错误类型判断和事务回滚的实践建议。\",\"VisitCount\":0}"}
{"level":"debug","ts":"2025-05-27T08:34:32.484+0800","caller":"cache/cache_manager.go:144","msg":"缓存设置成功","key":"article:0","type":"article","expiration":259200,"data":"{\"ID\":297,\"CreatedAt\":\"2025-05-02T12:57:46.292+08:00\",\"UpdatedAt\":\"2025-05-02T12:57:46.292+08:00\",\"DeletedAt\":null,\"Key\":\"5c4ba640d8f2bf13ef0e797e56a3a064770c11c8c975950f5bbf230ee022f94f\",\"ArticleID\":0,\"Abstract\":\"文章分析了 GORM 框架中四个核心方法的行为特征：1) First() 未查询到数据时返回 gorm.ErrRecordNotFound；2) Create() 插入失败时错误类型包含约束冲突/数据类型不匹配/连接问题；3) Update() 数据未变化时 RowsAffected 返回 0；4) Delete() 数据不存在时 error 为 nil 但 RowsAffected 为 0。\",\"Summary\":\"文章详细解构了 GORM ORM 框架在 CRUD 操作中的异常处理机制，重点阐述了不同方法在数据不存在/数据冲突/数据未变更等场景下的返回值特征，并提供了错误类型判断和事务回滚的实践建议。\",\"VisitCount\":0}"}
{"level":"debug","ts":"2025-05-27T08:34:32.527+0800","caller":"cache/cache_manager.go:144","msg":"缓存设置成功","key":"article:0","type":"article","expiration":259200,"data":"{\"ID\":311,\"CreatedAt\":\"2025-05-02T14:15:18.091+08:00\",\"UpdatedAt\":\"2025-05-02T14:15:18.091+08:00\",\"DeletedAt\":null,\"Key\":\"fa2b7af0a811b9acde602aacb78e3638e8506dfead5fe6c3425b10b526f94bdd\",\"ArticleID\":0,\"Abstract\":\"文章解析了 GORM 框架四个核心方法的异常处理机制：1) First() 未查询到数据返回 gorm.ErrRecordNotFound；2) Create() 插入失败包含约束冲突/数据类型错误/连接异常；3) Update() 数据未修改时 RowsAffected 为 0；4) Delete() 数据不存在时 error 为 nil 但 RowsAffected 为 0。\",\"Summary\":\"文章系统梳理了 GORM 在 CRUD 操作中的差异化错误处理逻辑，明确数据不存在、约束冲突、零值更新等场景下的返回值特征，并给出错误类型精准判断与事务处理的工程实践指导。\",\"VisitCount\":0}"}
{"level":"debug","ts":"2025-05-27T08:34:32.543+0800","caller":"cache/cache_manager.go:144","msg":"缓存设置成功","key":"article:0","type":"article","expiration":259200,"data":"{\"ID\":312,\"CreatedAt\":\"2025-05-02T14:17:12.998+08:00\",\"UpdatedAt\":\"2025-05-02T14:17:12.998+08:00\",\"DeletedAt\":null,\"Key\":\"4cf6829aa93728e8f3c97df913fb1bfa95fe5810e2933a05943f8312a98d9cf2\",\"ArticleID\":0,\"Abstract\":\"文章分析了 GORM 框架中四个核心方法的行为特征：1) First() 未查询到数据时返回 gorm.ErrRecordNotFound；2) Create() 插入失败时错误类型包含约束冲突/数据类型不匹配/连接问题；3) Update() 数据未变化时 RowsAffected 返回 0；4) Delete() 数据不存在时 error 为 nil 但 RowsAffected 为 0。\",\"Summary\":\"文章详细解构了 GORM ORM 框架在 CRUD 操作中的异常处理机制，重点阐述了不同方法在数据不存在/数据冲突/数据未变更等场景下的返回值特征，并提供了错误类型判断和事务回滚的实践建议。\",\"VisitCount\":0}"}
{"level":"debug","ts":"2025-05-27T08:34:32.551+0800","caller":"cache/cache_manager.go:144","msg":"缓存设置成功","key":"article:0","type":"article","expiration":259200,"data":"{\"ID\":313,\"CreatedAt\":\"2025-05-02T14:20:18.919+08:00\",\"UpdatedAt\":\"2025-05-02T14:20:18.919+08:00\",\"DeletedAt\":null,\"Key\":\"b2ca4c32632ea0aed838cbd24b30911f556f126a33f75f844f675fe391389532\",\"ArticleID\":0,\"Abstract\":\"文章分析了 GORM 框架中四个核心方法的行为特征：1) First() 未查询到数据时返回 gorm.ErrRecordNotFound；2) Create() 插入失败时错误类型包含约束冲突/数据类型不匹配/连接问题；3) Update() 数据未变化时 RowsAffected 返回 0；4) Delete() 数据不存在时 error 为 nil 但 RowsAffected 为 0。\",\"Summary\":\"文章详细解构了 GORM ORM 框架在 CRUD 操作中的异常处理机制，重点阐述了不同方法在数据不存在/数据冲突/数据未变更等场景下的返回值特征，并提供了错误类型判断和事务回滚的实践建议。\",\"VisitCount\":0}"}
{"level":"debug","ts":"2025-05-27T08:34:32.589+0800","caller":"cache/cache_manager.go:144","msg":"缓存设置成功","key":"article:0","type":"article","expiration":259200,"data":"{\"ID\":314,\"CreatedAt\":\"2025-05-03T00:54:17.478+08:00\",\"UpdatedAt\":\"2025-05-03T00:54:17.478+08:00\",\"DeletedAt\":null,\"Key\":\"d2696397e3ab70f45a7dad8676857947ddabe6abac3bc06d020ebafe84767cba\",\"ArticleID\":0,\"Abstract\":\"文章分析了 GORM 框架中四个核心方法的行为特征：1) First() 未查询到数据时返回 gorm.ErrRecordNotFound；2) Create() 插入失败时错误类型包含约束冲突/数据类型不匹配/连接问题；3) Update() 数据未变化时 RowsAffected 返回 0；4) Delete() 数据不存在时 error 为 nil 但 RowsAffected 为 0。\",\"Summary\":\"文章详细解构了 GORM ORM 框架在 CRUD 操作中的异常处理机制，重点阐述了不同方法在数据不存在/数据冲突/数据未变更等场景下的返回值特征，并提供了错误类型判断和事务回滚的实践建议。\",\"VisitCount\":0}"}
{"level":"debug","ts":"2025-05-27T08:34:32.628+0800","caller":"cache/cache_manager.go:144","msg":"缓存设置成功","key":"article:0","type":"article","expiration":259200,"data":"{\"ID\":315,\"CreatedAt\":\"2025-05-03T01:20:29.426+08:00\",\"UpdatedAt\":\"2025-05-03T01:20:29.426+08:00\",\"DeletedAt\":null,\"Key\":\"a665a45920422f9d417e4867efdc4fb8a04a1f3fff1fa07e998e86f7f7a27ae3\",\"ArticleID\":0,\"Abstract\":\"文章分析了 GORM 框架中四个核心方法的行为特征：1) First() 未查询到数据时返回 gorm.ErrRecordNotFound；2) Create() 插入失败时错误类型包含约束冲突/数据类型不匹配/连接问题；3) Update() 数据未变化时 RowsAffected 返回 0；4) Delete() 数据不存在时 error 为 nil 但 RowsAffected 为 0。\",\"Summary\":\"文章详细解构了 GORM ORM 框架在 CRUD 操作中的异常处理机制，重点阐述了不同方法在数据不存在/数据冲突/数据未变更等场景下的返回值特征，并提供了错误类型判断和事务回滚的实践建议。\",\"VisitCount\":0}"}
{"level":"debug","ts":"2025-05-27T08:34:32.671+0800","caller":"cache/cache_manager.go:144","msg":"缓存设置成功","key":"article:0","type":"article","expiration":259200,"data":"{\"ID\":316,\"CreatedAt\":\"2025-05-03T01:29:43.965+08:00\",\"UpdatedAt\":\"2025-05-03T01:29:43.965+08:00\",\"DeletedAt\":null,\"Key\":\"c5f9eb390a108b4859979e6b4356f30d03f48d8d836596fc8b09ab8307ef03f0\",\"ArticleID\":0,\"Abstract\":\"文章解析了 GORM 框架四个核心方法的异常处理机制：1) First() 未查询到数据返回 gorm.ErrRecordNotFound；2) Create() 插入失败包含约束冲突/数据类型错误/连接异常三类错误；3) Update() 数据未修改时 RowsAffected 为 0；4) Delete() 数据不存在时 error 为空但 RowsAffected 为 0。\",\"Summary\":\"文章系统梳理了 GORM 框架在 CRUD 操作中的错误处理逻辑，明确区分了数据不存在、约束冲突、数据未变更等场景下的返回值差异，并针对事务回滚场景提出了基于错误类型判断的工程实践建议。\",\"VisitCount\":0}"}
{"level":"debug","ts":"2025-05-27T08:34:32.684+0800","caller":"cache/cache_manager.go:144","msg":"缓存设置成功","key":"article:0","type":"article","expiration":259200,"data":"{\"ID\":317,\"CreatedAt\":\"2025-05-03T01:30:11.957+08:00\",\"UpdatedAt\":\"2025-05-03T01:30:11.957+08:00\",\"DeletedAt\":null,\"Key\":\"7104741a92e73eb6c5d69cd04cf0afbe50a8796a010d8fa25daaf79e5e173bf3\",\"ArticleID\":0,\"Abstract\":\"文章解析了 GORM 框架四个核心方法的异常处理机制：1) First() 未查询到数据返回 gorm.ErrRecordNotFound；2) Create() 插入失败包含约束冲突/数据类型错误/连接异常；3) Update() 数据未修改时 RowsAffected=0；4) Delete() 数据不存在时 error 为 nil 但 RowsAffected=0。\",\"Summary\":\"文章系统阐述了 GORM 框架在 CRUD 操作中的错误返回逻辑，明确不同方法在数据缺失/冲突/未变更场景下的差异化处理方式，并给出错误类型识别与事务管理的具体指导方案。\",\"VisitCount\":0}"}
{"level":"debug","ts":"2025-05-27T08:34:32.724+0800","caller":"cache/cache_manager.go:144","msg":"缓存设置成功","key":"article:0","type":"article","expiration":259200,"data":"{\"ID\":318,\"CreatedAt\":\"2025-05-03T01:52:59.034+08:00\",\"UpdatedAt\":\"2025-05-03T01:52:59.034+08:00\",\"DeletedAt\":null,\"Key\":\"9b2de7c2319128b345a6024cb7836a49a98919c4a6777fbb66d3e55200c7b86f\",\"ArticleID\":0,\"Abstract\":\"文章分析了 GORM 框架中四个核心方法的行为特征：1) First() 未查询到数据时返回 gorm.ErrRecordNotFound；2) Create() 插入失败时错误类型包含约束冲突/数据类型不匹配/连接问题；3) Update() 数据未变化时 RowsAffected 返回 0；4) Delete() 数据不存在时 error 为 nil 但 RowsAffected 为 0。\",\"Summary\":\"文章详细解构了 GORM ORM 框架在 CRUD 操作中的异常处理机制，重点阐述了不同方法在数据不存在/数据冲突/数据未变更等场景下的返回值特征，并提供了错误类型判断和事务回滚的实践建议。\",\"VisitCount\":0}"}
{"level":"debug","ts":"2025-05-27T08:34:32.758+0800","caller":"cache/cache_manager.go:144","msg":"缓存设置成功","key":"article:0","type":"article","expiration":259200,"data":"{\"ID\":319,\"CreatedAt\":\"2025-05-03T01:54:58.768+08:00\",\"UpdatedAt\":\"2025-05-03T01:54:58.768+08:00\",\"DeletedAt\":null,\"Key\":\"3949ac1596ec77106a709a618bf5adcb19b77537ce8bcbdf54ff830169cdd084\",\"ArticleID\":0,\"Abstract\":\"文章解析了 GORM 框架四个核心方法的异常处理机制：1) First() 未查询到数据时返回 gorm.ErrRecordNotFound；2) Create() 插入失败可能因约束冲突/数据类型错误/连接问题触发错误；3) Update() 数据未修改时 RowsAffected 为 0；4) Delete() 数据不存在时 error 为空但 RowsAffected 为 0。\",\"Summary\":\"文章系统梳理了 GORM 在 CRUD 操作中的差异化错误反馈模式，明确了数据不存在、冲突校验、无变更场景下的返回值逻辑，并针对事务回滚和错误类型判断给出开发实践指导。\",\"VisitCount\":0}"}
{"level":"debug","ts":"2025-05-27T08:34:32.777+0800","caller":"cache/cache_manager.go:144","msg":"缓存设置成功","key":"article:0","type":"article","expiration":259200,"data":"{\"ID\":320,\"CreatedAt\":\"2025-05-03T02:02:22.169+08:00\",\"UpdatedAt\":\"2025-05-03T02:02:22.169+08:00\",\"DeletedAt\":null,\"Key\":\"33c995ef4bb3f05a77fbc5842b651cc1580880f595b95b09954af6da1e989b78\",\"ArticleID\":0,\"Abstract\":\"文章解析了 GORM 框架四个核心方法在异常场景下的返回值特征：1) First() 未查询到数据时返回 gorm.ErrRecordNotFound；2) Create() 插入失败包含约束冲突/数据类型错误/连接异常；3) Update() 数据未修改时 RowsAffected 为 0；4) Delete() 数据不存在时 error 为 nil 但 RowsAffected 为 0。\",\"Summary\":\"文章系统梳理了 GORM 框架在 CRUD 操作中的差异化错误处理逻辑，明确不同方法在数据缺失、约束冲突、零变更等场景的响应机制，并给出错误类型识别与事务管理的具体指导方案。\",\"VisitCount\":0}"}
{"level":"debug","ts":"2025-05-27T08:34:32.793+0800","caller":"cache/cache_manager.go:144","msg":"缓存设置成功","key":"article:0","type":"article","expiration":259200,"data":"{\"ID\":321,\"CreatedAt\":\"2025-05-03T02:17:56.451+08:00\",\"UpdatedAt\":\"2025-05-03T02:17:56.451+08:00\",\"DeletedAt\":null,\"Key\":\"5b986360eeaed5e6a90b04f1e9075f150664d65ad0d8cd389e08732fc14ac401\",\"ArticleID\":0,\"Abstract\":\"文章分析了 GORM 框架中四个核心方法的行为特征：1) First() 未查询到数据时返回 gorm.ErrRecordNotFound；2) Create() 插入失败时错误类型包含约束冲突/数据类型不匹配/连接问题；3) Update() 数据未变化时 RowsAffected 返回 0；4) Delete() 数据不存在时 error 为 nil 但 RowsAffected 为 0。\",\"Summary\":\"文章详细解构了 GORM ORM 框架在 CRUD 操作中的异常处理机制，重点阐述了不同方法在数据不存在/数据冲突/数据未变更等场景下的返回值特征，并提供了错误类型判断和事务回滚的实践建议。\",\"VisitCount\":0}"}
{"level":"debug","ts":"2025-05-27T08:34:32.811+0800","caller":"cache/cache_manager.go:144","msg":"缓存设置成功","key":"article:0","type":"article","expiration":259200,"data":"{\"ID\":413,\"CreatedAt\":\"2025-05-17T07:42:58.526+08:00\",\"UpdatedAt\":\"2025-05-17T07:42:58.526+08:00\",\"DeletedAt\":null,\"Key\":\"473287f8298dba7163a897908958f7c0eae733e25d2e027992ea2edc9bed2fa8\",\"ArticleID\":0,\"Abstract\":\"\",\"Summary\":\"\",\"VisitCount\":0}"}
{"level":"debug","ts":"2025-05-27T08:34:32.834+0800","caller":"cache/cache_manager.go:144","msg":"缓存设置成功","key":"article:0","type":"article","expiration":259200,"data":"{\"ID\":269,\"CreatedAt\":\"2025-05-02T06:42:20.45+08:00\",\"UpdatedAt\":\"2025-05-02T06:42:20.45+08:00\",\"DeletedAt\":null,\"Key\":\"47ec0c4bbeda610899ba7b7f46ed98c872d0c20a5d3f04adc1ca5edcf5ff85a9\",\"ArticleID\":0,\"Abstract\":\"文章分析了 GORM 框架中四个核心方法的行为特征：1) First() 未查询到数据时返回 gorm.ErrRecordNotFound；2) Create() 插入失败时错误类型包含约束冲突/数据类型不匹配/连接问题；3) Update() 数据未变化时 RowsAffected 返回 0；4) Delete() 数据不存在时 error 为 nil 但 RowsAffected 为 0。\",\"Summary\":\"文章详细解构了 GORM ORM 框架在 CRUD 操作中的异常处理机制，重点阐述了不同方法在数据不存在/数据冲突/数据未变更等场景下的返回值特征，并提供了错误类型判断和事务回滚的实践建议。\",\"VisitCount\":0}"}
{"level":"debug","ts":"2025-05-27T08:34:32.875+0800","caller":"cache/cache_manager.go:144","msg":"缓存设置成功","key":"article:0","type":"article","expiration":259200,"data":"{\"ID\":257,\"CreatedAt\":\"2025-05-02T01:29:47.087+08:00\",\"UpdatedAt\":\"2025-05-02T01:29:47.087+08:00\",\"DeletedAt\":null,\"Key\":\"e29c9c180c6279b0b02abd6a1801c7c04082cf486ec027aa13515e4f3884bb6b\",\"ArticleID\":0,\"Abstract\":\"文章分析了 GORM 框架中四个核心方法的行为特征：1) First() 未查询到数据时返回 gorm.ErrRecordNotFound；2) Create() 插入失败时错误类型包含约束冲突/数据类型不匹配/连接问题；3) Update() 数据未变化时 RowsAffected 返回 0；4) Delete() 数据不存在时 error 为 nil 但 RowsAffected 为 0。\",\"Summary\":\"文章详细解构了 GORM ORM 框架在 CRUD 操作中的异常处理机制，重点阐述了不同方法在数据不存在/数据冲突/数据未变更等场景下的返回值特征，并提供了错误类型判断和事务回滚的实践建议。\",\"VisitCount\":0}"}
{"level":"debug","ts":"2025-05-27T08:34:32.904+0800","caller":"cache/cache_manager.go:144","msg":"缓存设置成功","key":"article:0","type":"article","expiration":259200,"data":"{\"ID\":258,\"CreatedAt\":\"2025-05-02T01:35:40.126+08:00\",\"UpdatedAt\":\"2025-05-02T01:35:40.126+08:00\",\"DeletedAt\":null,\"Key\":\"46372e8648989e4c62b21193f6ce9bc0e0a10e51da07d6e43c3b2de46c44c0d3\",\"ArticleID\":0,\"Abstract\":\"文章分析了 GORM 框架中四个核心方法的行为特征：1) First() 未查询到数据时返回 gorm.ErrRecordNotFound；2) Create() 插入失败时错误类型包含约束冲突/数据类型不匹配/连接问题；3) Update() 数据未变化时 RowsAffected 返回 0；4) Delete() 数据不存在时 error 为 nil 但 RowsAffected 为 0。\",\"Summary\":\"文章详细解构了 GORM ORM 框架在 CRUD 操作中的异常处理机制，重点阐述了不同方法在数据不存在/数据冲突/数据未变更等场景下的返回值特征，并提供了错误类型判断和事务回滚的实践建议。\",\"VisitCount\":0}"}
{"level":"debug","ts":"2025-05-27T08:34:32.935+0800","caller":"cache/cache_manager.go:144","msg":"缓存设置成功","key":"article:0","type":"article","expiration":259200,"data":"{\"ID\":259,\"CreatedAt\":\"2025-05-02T01:36:17.481+08:00\",\"UpdatedAt\":\"2025-05-02T01:36:17.481+08:00\",\"DeletedAt\":null,\"Key\":\"0e67e8a86cac5209b4c3d735112c843aae2dc7e55f00704bf24fbbda24fd3a8e\",\"ArticleID\":0,\"Abstract\":\"文章分析了 GORM 框架中四个核心方法的行为特征：1) First() 未查询到数据时返回 gorm.ErrRecordNotFound；2) Create() 插入失败时错误类型包含约束冲突/数据类型不匹配/连接问题；3) Update() 数据未变化时 RowsAffected 返回 0；4) Delete() 数据不存在时 error 为 nil 但 RowsAffected 为 0。\",\"Summary\":\"文章详细解构了 GORM ORM 框架在 CRUD 操作中的异常处理机制，重点阐述了不同方法在数据不存在/数据冲突/数据未变更等场景下的返回值特征，并提供了错误类型判断和事务回滚的实践建议。\",\"VisitCount\":0}"}
{"level":"debug","ts":"2025-05-27T08:34:32.968+0800","caller":"cache/cache_manager.go:144","msg":"缓存设置成功","key":"article:0","type":"article","expiration":259200,"data":"{\"ID\":260,\"CreatedAt\":\"2025-05-02T02:24:46.693+08:00\",\"UpdatedAt\":\"2025-05-02T02:24:46.693+08:00\",\"DeletedAt\":null,\"Key\":\"b553e6af4fb183a84375bf1e79a2be2768fc3c50344bff533a9baba97bd537fe\",\"ArticleID\":0,\"Abstract\":\"文章分析了 GORM 框架中四个核心方法的行为特征：1) First() 未查询到数据时返回 gorm.ErrRecordNotFound；2) Create() 插入失败时错误类型包含约束冲突/数据类型不匹配/连接问题；3) Update() 数据未变化时 RowsAffected 返回 0；4) Delete() 数据不存在时 error 为 nil 但 RowsAffected 为 0。\",\"Summary\":\"文章详细解构了 GORM ORM 框架在 CRUD 操作中的异常处理机制，重点阐述了不同方法在数据不存在/数据冲突/数据未变更等场景下的返回值特征，并提供了错误类型判断和事务回滚的实践建议。\",\"VisitCount\":0}"}
{"level":"debug","ts":"2025-05-27T08:34:32.989+0800","caller":"cache/cache_manager.go:144","msg":"缓存设置成功","key":"article:0","type":"article","expiration":259200,"data":"{\"ID\":261,\"CreatedAt\":\"2025-05-02T02:39:41.677+08:00\",\"UpdatedAt\":\"2025-05-02T02:39:41.677+08:00\",\"DeletedAt\":null,\"Key\":\"835d5e8314340ab852a2f979ab4cd53e994dbe38366afb6eed84fe4957b980c8\",\"ArticleID\":0,\"Abstract\":\"文章分析了 GORM 框架中四个核心方法的行为特征：1) First() 未查询到数据时返回 gorm.ErrRecordNotFound；2) Create() 插入失败时错误类型包含约束冲突/数据类型不匹配/连接问题；3) Update() 数据未变化时 RowsAffected 返回 0；4) Delete() 数据不存在时 error 为 nil 但 RowsAffected 为 0。\",\"Summary\":\"文章详细解构了 GORM ORM 框架在 CRUD 操作中的异常处理机制，重点阐述了不同方法在数据不存在/数据冲突/数据未变更等场景下的返回值特征，并提供了错误类型判断和事务回滚的实践建议。\",\"VisitCount\":0}"}
{"level":"debug","ts":"2025-05-27T08:34:33.022+0800","caller":"cache/cache_manager.go:144","msg":"缓存设置成功","key":"article:0","type":"article","expiration":259200,"data":"{\"ID\":262,\"CreatedAt\":\"2025-05-02T02:41:21.962+08:00\",\"UpdatedAt\":\"2025-05-02T02:41:21.962+08:00\",\"DeletedAt\":null,\"Key\":\"455473bb653666fcac550a5e00453a10783c44720a70e08e7f44d8b7498d522f\",\"ArticleID\":0,\"Abstract\":\"文章解析了 GORM 框架四个核心方法的异常处理机制：1) First() 未查询到数据返回 gorm.ErrRecordNotFound；2) Create() 插入失败涉及约束冲突/数据类型错误/连接异常；3) Update() 数据未修改时 RowsAffected 为 0；4) Delete() 数据不存在时 error 为 nil 但 RowsAffected 为 0。\",\"Summary\":\"文章系统梳理了 GORM 在 CRUD 操作中的差异化错误处理逻辑，明确不同方法在数据异常场景（如记录缺失、约束冲突、无变更操作）下的返回值规则，并强调通过错误类型判断和 RowsAffected 值实现精准的事务控制。\",\"VisitCount\":0}"}
{"level":"debug","ts":"2025-05-27T08:34:33.057+0800","caller":"cache/cache_manager.go:144","msg":"缓存设置成功","key":"article:0","type":"article","expiration":259200,"data":"{\"ID\":263,\"CreatedAt\":\"2025-05-02T02:42:00.185+08:00\",\"UpdatedAt\":\"2025-05-02T02:42:00.185+08:00\",\"DeletedAt\":null,\"Key\":\"6f4b6612125fb3a0daecd2799dfd6c9c299424fd920f9b308110a2c1fbd8f443\",\"ArticleID\":0,\"Abstract\":\"文章解析了 GORM 框架四个核心方法的行为特征：1) First() 未查询到数据返回 gorm.ErrRecordNotFound；2) Create() 插入失败包含约束冲突/数据类型错误/连接异常；3) Update() 数据未修改时 RowsAffected 为 0；4) Delete() 数据不存在时 error 为空但 RowsAffected 为 0。\",\"Summary\":\"文章系统梳理了 GORM 框架在 CRUD 操作中的异常处理逻辑，明确不同方法在数据缺失/冲突/无变更场景下的返回值差异，并给出错误类型识别与事务处理的开发指导。\",\"VisitCount\":0}"}
{"level":"debug","ts":"2025-05-27T08:34:33.097+0800","caller":"cache/cache_manager.go:144","msg":"缓存设置成功","key":"article:0","type":"article","expiration":259200,"data":"{\"ID\":264,\"CreatedAt\":\"2025-05-02T03:15:13.063+08:00\",\"UpdatedAt\":\"2025-05-02T03:15:13.063+08:00\",\"DeletedAt\":null,\"Key\":\"521ea9c60b025d7ac36b93e3af4d3a6aeb3a400c01f198d14d4768e0862762ab\",\"ArticleID\":0,\"Abstract\":\"文章解析了 GORM 框架四个核心方法的异常处理机制：1) First() 未查询到数据返回 gorm.ErrRecordNotFound；2) Create() 插入失败包含约束冲突/数据类型错误/连接异常；3) Update() 数据未修改时 RowsAffected 为 0；4) Delete() 数据不存在时 error 为 nil 但 RowsAffected 为 0。\",\"Summary\":\"文章系统梳理了 GORM 框架在 CRUD 操作中的异常处理逻辑，明确不同方法在数据缺失/冲突/未变更等场景的返回值差异，并给出错误类型识别与事务处理的工程实践指导。\",\"VisitCount\":0}"}
{"level":"debug","ts":"2025-05-27T08:34:33.120+0800","caller":"cache/cache_manager.go:144","msg":"缓存设置成功","key":"article:0","type":"article","expiration":259200,"data":"{\"ID\":265,\"CreatedAt\":\"2025-05-02T03:15:54.862+08:00\",\"UpdatedAt\":\"2025-05-02T03:15:54.862+08:00\",\"DeletedAt\":null,\"Key\":\"98f1f17f9a73ccfe3e25940add8d9ce9bf05513104cacb84f2f1185bf5886a84\",\"ArticleID\":0,\"Abstract\":\"文章分析了 GORM 框架中四个核心方法的行为特征：1) First() 未查询到数据时返回 gorm.ErrRecordNotFound；2) Create() 插入失败时错误类型包含约束冲突/数据类型不匹配/连接问题；3) Update() 数据未变化时 RowsAffected 返回 0；4) Delete() 数据不存在时 error 为 nil 但 RowsAffected 为 0。\",\"Summary\":\"文章详细解构了 GORM ORM 框架在 CRUD 操作中的异常处理机制，重点阐述了不同方法在数据不存在/数据冲突/数据未变更等场景下的返回值特征，并提供了错误类型判断和事务回滚的实践建议。\",\"VisitCount\":0}"}
{"level":"debug","ts":"2025-05-27T08:34:33.143+0800","caller":"cache/cache_manager.go:144","msg":"缓存设置成功","key":"article:0","type":"article","expiration":259200,"data":"{\"ID\":266,\"CreatedAt\":\"2025-05-02T03:25:22.766+08:00\",\"UpdatedAt\":\"2025-05-02T03:25:22.766+08:00\",\"DeletedAt\":null,\"Key\":\"814bb6b8dc12188a44b71e378dc20a4292e01979aa9ab95b09b8a681391dfc9d\",\"ArticleID\":0,\"Abstract\":\"文章解析了 GORM 框架四个核心方法的异常处理机制：1) First() 未查询到数据返回特定错误类型；2) Create() 插入失败包含多种错误类型判断；3) Update() 数据未变更时返回 0 影响行数；4) Delete() 数据不存在时返回空错误但影响行数为 0。\",\"Summary\":\"文章系统梳理了 GORM ORM 框架在 CRUD 操作中的错误反馈模式，重点对比不同方法在数据异常场景下的返回值差异，并给出基于错误类型判断实现事务回滚的工程实践指导。\",\"VisitCount\":0}"}
{"level":"debug","ts":"2025-05-27T08:34:33.173+0800","caller":"cache/cache_manager.go:144","msg":"缓存设置成功","key":"article:0","type":"article","expiration":259200,"data":"{\"ID\":267,\"CreatedAt\":\"2025-05-02T03:29:30.926+08:00\",\"UpdatedAt\":\"2025-05-02T03:29:30.926+08:00\",\"DeletedAt\":null,\"Key\":\"78a69c6fdc7b95f502f14d3c826b21528318ef248796d5a41478096973dd1ad6\",\"ArticleID\":0,\"Abstract\":\"文章分析了 GORM 框架中四个核心方法的行为特征：1) First() 未查询到数据时返回 gorm.ErrRecordNotFound；2) Create() 插入失败时错误类型包含约束冲突/数据类型不匹配/连接问题；3) Update() 数据未变化时 RowsAffected 返回 0；4) Delete() 数据不存在时 error 为 nil 但 RowsAffected 为 0。\",\"Summary\":\"文章详细解构了 GORM ORM 框架在 CRUD 操作中的异常处理机制，重点阐述了不同方法在数据不存在/数据冲突/数据未变更等场景下的返回值特征，并提供了错误类型判断和事务回滚的实践建议。\",\"VisitCount\":0}"}
{"level":"debug","ts":"2025-05-27T08:34:33.177+0800","caller":"cache/cache_manager.go:144","msg":"缓存设置成功","key":"article:0","type":"article","expiration":259200,"data":"{\"ID\":268,\"CreatedAt\":\"2025-05-02T06:39:54.453+08:00\",\"UpdatedAt\":\"2025-05-02T06:39:54.453+08:00\",\"DeletedAt\":null,\"Key\":\"8d23cf6c86e834a7aa6eded54c26ce2bb2e74903538c61bdd5d2197997ab2f72\",\"ArticleID\":0,\"Abstract\":\"文章解析了 GORM 框架四个核心方法的行为特征：1) First() 未查询到数据返回 gorm.ErrRecordNotFound；2) Create() 插入失败包含约束冲突/数据类型错误/连接异常；3) Update() 数据未修改时 RowsAffected 显示 0；4) Delete() 数据不存在时 error 为空但 RowsAffected 为 0。\",\"Summary\":\"文章系统剖析了 GORM 框架在 CRUD 操作中的异常处理逻辑，明确不同方法在数据缺失/约束冲突/数据未更新等场景的返回值规则，同时给出错误类型识别与事务处理的开发指导。\",\"VisitCount\":0}"}
{"level":"debug","ts":"2025-05-27T08:34:33.207+0800","caller":"cache/cache_manager.go:144","msg":"缓存设置成功","key":"article:0","type":"article","expiration":259200,"data":"{\"ID\":256,\"CreatedAt\":\"2025-05-02T01:24:14.611+08:00\",\"UpdatedAt\":\"2025-05-02T01:24:14.611+08:00\",\"DeletedAt\":null,\"Key\":\"3c15285c04fff40024bb8714b93e58178bf8d3bebe6943178e1c5412957b7aa1\",\"ArticleID\":0,\"Abstract\":\"文章解析了 GORM 框架四个核心方法的行为特征：1) First() 未查询到数据时返回 gorm.ErrRecordNotFound；2) Create() 插入失败时错误类型包含约束冲突/数据类型不匹配/连接问题；3) Update() 数据未变化时 RowsAffected 返回 0；4) Delete() 数据不存在时 error 为 nil 但 RowsAffected 为 0。\",\"Summary\":\"文章系统剖析了 GORM ORM 框架在 CRUD 操作中的异常处理逻辑，明确指出了不同方法在数据不存在、约束冲突、数据未变更等场景下的返回值差异，并给出错误类型判断与事务处理的实战指导。\",\"VisitCount\":0}"}
{"level":"debug","ts":"2025-05-27T08:34:33.221+0800","caller":"cache/cache_manager.go:144","msg":"缓存设置成功","key":"article:0","type":"article","expiration":259200,"data":"{\"ID\":270,\"CreatedAt\":\"2025-05-02T06:51:52.339+08:00\",\"UpdatedAt\":\"2025-05-02T06:51:52.339+08:00\",\"DeletedAt\":null,\"Key\":\"eb1e33e8a81b697b75855af6bfcdbcbf7cbbde9f94962ceaec1ed8af21f5a50f\",\"ArticleID\":0,\"Abstract\":\"文章分析了 GORM 框架中四个核心方法的行为特征：1) First() 未查询到数据时返回 gorm.ErrRecordNotFound；2) Create() 插入失败时错误类型包含约束冲突/数据类型不匹配/连接问题；3) Update() 数据未变化时 RowsAffected 返回 0；4) Delete() 数据不存在时 error 为 nil 但 RowsAffected 为 0。\",\"Summary\":\"文章详细解构了 GORM ORM 框架在 CRUD 操作中的异常处理机制，重点阐述了不同方法在数据不存在/数据冲突/数据未变更等场景下的返回值特征，并提供了错误类型判断和事务回滚的实践建议。\",\"VisitCount\":0}"}
{"level":"debug","ts":"2025-05-27T08:34:33.251+0800","caller":"cache/cache_manager.go:144","msg":"缓存设置成功","key":"article:0","type":"article","expiration":259200,"data":"{\"ID\":271,\"CreatedAt\":\"2025-05-02T07:05:50.267+08:00\",\"UpdatedAt\":\"2025-05-02T07:05:50.267+08:00\",\"DeletedAt\":null,\"Key\":\"72440a20f54075ac43f51a2cf0dbb2a14366b38a5c01b110ae174abc1cb44238\",\"ArticleID\":0,\"Abstract\":\"文章解析了 GORM 框架四个核心方法的异常处理特征：1) First() 未查询到数据返回 gorm.ErrRecordNotFound；2) Create() 插入失败包含约束冲突/数据类型错误/连接异常；3) Update() 数据未修改时 RowsAffected 为 0；4) Delete() 数据不存在时 error 为 nil 但 RowsAffected 为 0。\",\"Summary\":\"文章系统剖析了 GORM 框架在 CRUD 操作中的错误处理逻辑，明确不同方法在数据缺失、约束冲突、数据未变更等场景的返回值差异，并给出错误类型判定与事务处理的工程实践指导。\",\"VisitCount\":0}"}
{"level":"debug","ts":"2025-05-27T08:34:33.275+0800","caller":"cache/cache_manager.go:144","msg":"缓存设置成功","key":"article:0","type":"article","expiration":259200,"data":"{\"ID\":272,\"CreatedAt\":\"2025-05-02T07:22:00.69+08:00\",\"UpdatedAt\":\"2025-05-02T07:22:00.69+08:00\",\"DeletedAt\":null,\"Key\":\"02d20bbd7e394ad5999a4cebabac9619732c343a4cac99470c03e23ba2bdc2bc\",\"ArticleID\":0,\"Abstract\":\"文章分析了 GORM 框架中四个核心方法的行为特征：1) First() 未查询到数据时返回 gorm.ErrRecordNotFound；2) Create() 插入失败时错误类型包含约束冲突、数据类型不匹配和连接问题；3) Update() 数据未变化时 RowsAffected 返回 0；4) Delete() 数据不存在时 error 为 nil 但 RowsAffected 为 0。\",\"Summary\":\"文章详细解构了 GORM ORM 框架在 CRUD 操作中的异常处理机制，重点阐述了不同方法在数据不存在、数据冲突、数据未变更等场景下的返回值特征，并提供了错误类型判断和事务回滚的实践建议。\",\"VisitCount\":0}"}
{"level":"debug","ts":"2025-05-27T08:34:33.292+0800","caller":"cache/cache_manager.go:144","msg":"缓存设置成功","key":"article:198","type":"article","expiration":259200,"data":"{\"ID\":276,\"CreatedAt\":\"2025-05-02T11:49:10.953+08:00\",\"UpdatedAt\":\"2025-05-02T11:49:10.953+08:00\",\"DeletedAt\":null,\"Key\":\"61e944c39aad9f7fc90d41ed6bbc97b900ba215daab120bc3915f6a99a39340b\",\"ArticleID\":198,\"Abstract\":\"文章系统阐述了《弟子规》的核心行为规范体系，包含总叙、入则孝、出则悌、谨四个篇章，具体涉及孝道实践（父母呼应勿缓）、兄弟相处（财物轻怨何生）、生活礼仪（晨必盥兼漱口）等传统道德准则。\",\"Summary\":\"该文完整呈现了儒家启蒙经典《弟子规》的完整文本结构，通过三字韵文形式系统规范了古代儿童在家庭伦理、社交礼仪、行为习惯等方面的具体要求，体现了孝悌仁爱、谨言慎行的传统教育思想。\",\"VisitCount\":0}"}
{"level":"debug","ts":"2025-05-27T08:34:33.300+0800","caller":"cache/cache_manager.go:144","msg":"缓存设置成功","key":"article:0","type":"article","expiration":259200,"data":"{\"ID\":277,\"CreatedAt\":\"2025-05-02T12:05:32.246+08:00\",\"UpdatedAt\":\"2025-05-02T12:05:32.246+08:00\",\"DeletedAt\":null,\"Key\":\"242ecc061256959a4a779496a69524518623527c8c53d039848351822cc8d311\",\"ArticleID\":0,\"Abstract\":\"文章分析了 GORM 框架中四个核心方法的行为特征：1) First() 未查询到数据时返回 gorm.ErrRecordNotFound；2) Create() 插入失败时错误类型包含约束冲突/数据类型不匹配/连接问题；3) Update() 数据未变化时 RowsAffected 返回 0；4) Delete() 数据不存在时 error 为 nil 但 RowsAffected 为 0。\",\"Summary\":\"文章详细解构了 GORM ORM 框架在 CRUD 操作中的异常处理机制，重点阐述了不同方法在数据不存在/数据冲突/数据未变更等场景下的返回值特征，并提供了错误类型判断和事务回滚的实践建议。\",\"VisitCount\":0}"}
{"level":"debug","ts":"2025-05-27T08:34:33.333+0800","caller":"cache/cache_manager.go:144","msg":"缓存设置成功","key":"article:213","type":"article","expiration":259200,"data":"{\"ID\":291,\"CreatedAt\":\"2025-05-02T12:46:12.941+08:00\",\"UpdatedAt\":\"2025-05-02T12:46:12.941+08:00\",\"DeletedAt\":null,\"Key\":\"730f75dafd73e047b86acb2dbd74e75dcb93272fa084a9082848f2341aa1abb6\",\"ArticleID\":213,\"Abstract\":\"文章分析了 GORM 框架中四个核心方法的行为特征：1) First() 未查询到数据时返回 gorm.ErrRecordNotFound；2) Create() 插入失败时错误类型包含约束冲突/数据类型不匹配/连接问题；3) Update() 数据未变化时 RowsAffected 返回 0；4) Delete() 数据不存在时 error 为 nil 但 RowsAffected 为 0。\",\"Summary\":\"文章详细解构了 GORM ORM 框架在 CRUD 操作中的异常处理机制，重点阐述了不同方法在数据不存在/数据冲突/数据未变更等场景下的返回值特征，并提供了错误类型判断和事务回滚的实践建议。\",\"VisitCount\":0}"}
{"level":"debug","ts":"2025-05-27T08:34:33.344+0800","caller":"cache/cache_manager.go:144","msg":"缓存设置成功","key":"article:0","type":"article","expiration":259200,"data":"{\"ID\":292,\"CreatedAt\":\"2025-05-02T12:52:44.389+08:00\",\"UpdatedAt\":\"2025-05-02T12:52:44.389+08:00\",\"DeletedAt\":null,\"Key\":\"afbd9fa69b7b567d901b5f28c0d91f69707fda75d27a11dfb98d3e3841724f19\",\"ArticleID\":0,\"Abstract\":\"文章分析了 GORM 框架中四个核心方法的行为特征：1) First() 未查询到数据时返回 gorm.ErrRecordNotFound；2) Create() 插入失败时错误类型包含约束冲突/数据类型不匹配/连接问题；3) Update() 数据未变化时 RowsAffected 返回 0；4) Delete() 数据不存在时 error 为 nil 但 RowsAffected 为 0。\",\"Summary\":\"文章详细解构了 GORM ORM 框架在 CRUD 操作中的异常处理机制，重点阐述了不同方法在数据不存在/数据冲突/数据未变更等场景下的返回值特征，并提供了错误类型判断和事务回滚的实践建议。\",\"VisitCount\":0}"}
{"level":"debug","ts":"2025-05-27T08:34:33.372+0800","caller":"cache/cache_manager.go:144","msg":"缓存设置成功","key":"article:0","type":"article","expiration":259200,"data":"{\"ID\":293,\"CreatedAt\":\"2025-05-02T12:56:54.5+08:00\",\"UpdatedAt\":\"2025-05-02T12:56:54.5+08:00\",\"DeletedAt\":null,\"Key\":\"49cbe57e9503aa0c6d0cf1f88ec2b8e1dfb870c346fb9c82bc0489915108d75a\",\"ArticleID\":0,\"Abstract\":\"文章分析了 GORM 框架中四个核心方法的行为特征：1) First() 未查询到数据时返回 gorm.ErrRecordNotFound；2) Create() 插入失败时错误类型包含约束冲突/数据类型不匹配/连接问题；3) Update() 数据未变化时 RowsAffected 返回 0；4) Delete() 数据不存在时 error 为 nil 但 RowsAffected 为 0。\",\"Summary\":\"文章详细解构了 GORM ORM 框架在 CRUD 操作中的异常处理机制，重点阐述了不同方法在数据不存在/数据冲突/数据未变更等场景下的返回值特征，并提供了错误类型判断和事务回滚的实践建议。\",\"VisitCount\":0}"}
{"level":"debug","ts":"2025-05-27T08:34:33.393+0800","caller":"cache/cache_manager.go:144","msg":"缓存设置成功","key":"article:0","type":"article","expiration":259200,"data":"{\"ID\":294,\"CreatedAt\":\"2025-05-02T12:57:01.049+08:00\",\"UpdatedAt\":\"2025-05-02T12:57:01.049+08:00\",\"DeletedAt\":null,\"Key\":\"3b395c46ec8489e20e985b02fe317eb04965e9f3c11f45186fd54c51af9cd1b4\",\"ArticleID\":0,\"Abstract\":\"文章分析了 GORM 框架中四个核心方法的行为特征：1) First() 未查询到数据时返回 gorm.ErrRecordNotFound；2) Create() 插入失败时错误类型包含约束冲突/数据类型不匹配/连接问题；3) Update() 数据未变化时 RowsAffected 返回 0；4) Delete() 数据不存在时 error 为 nil 但 RowsAffected 为 0。\",\"Summary\":\"文章详细解构了 GORM ORM 框架在 CRUD 操作中的异常处理机制，重点阐述了不同方法在数据不存在/数据冲突/数据未变更等场景下的返回值特征，并提供了错误类型判断和事务回滚的实践建议。\",\"VisitCount\":0}"}
{"level":"debug","ts":"2025-05-27T08:34:33.414+0800","caller":"cache/cache_manager.go:144","msg":"缓存设置成功","key":"article:0","type":"article","expiration":259200,"data":"{\"ID\":295,\"CreatedAt\":\"2025-05-02T12:57:33.072+08:00\",\"UpdatedAt\":\"2025-05-02T12:57:33.072+08:00\",\"DeletedAt\":null,\"Key\":\"eb83b900f20760249fa1f3342eeb9efda14da7d5701eb3eb1e8e1169aadb5921\",\"ArticleID\":0,\"Abstract\":\"文章分析了 GORM 框架中四个核心方法的行为特征：1) First() 未查询到数据时返回 gorm.ErrRecordNotFound；2) Create() 插入失败时错误类型包含约束冲突/数据类型不匹配/连接问题；3) Update() 数据未变化时 RowsAffected 返回 0；4) Delete() 数据不存在时 error 为 nil 但 RowsAffected 为 0。\",\"Summary\":\"文章详细解构了 GORM ORM 框架在 CRUD 操作中的异常处理机制，重点阐述了不同方法在数据不存在/数据冲突/数据未变更等场景下的返回值特征，并提供了错误类型判断和事务回滚的实践建议。\",\"VisitCount\":0}"}
{"level":"info","ts":"2025-05-27T08:34:33.414+0800","caller":"cache/cache_manager.go:240","msg":"文章缓存预热完成","count":50}
{"level":"info","ts":"2025-05-27T08:34:33.414+0800","caller":"cache/cache_manager.go:184","msg":"缓存预热完成"}
{"level":"warn","ts":"2025-05-27T08:34:35.072+0800","caller":"v3@v3.5.12/retry_interceptor.go:62","msg":"retrying of unary invoker failed","target":"etcd-endpoints://0xc0004d4a80/127.0.0.1:2379","attempt":0,"error":"rpc error: code = DeadlineExceeded desc = latest balancer error: connection error: desc = \"transport: Error while dialing: dial tcp 127.0.0.1:2379: connectex: No connection could be made because the target machine actively refused it.\""}
{"level":"error","ts":"2025-05-27T08:34:35.073+0800","caller":"server/main.go:78","msg":"创建 etcd 实例失败: 验证端点有效性失败 cli.Status() 127.0.0.1:2379: context deadline exceeded"}
{"level":"info","ts":"2025-05-27T08:40:38.250+0800","caller":"server/main.go:33","msg":"config初始化成功: config.Config{Server:struct { Port string \"mapstructure:\\\"port\\\"\" }{Port:\"50051\"}, MySQL:struct { Host string \"mapstructure:\\\"host\\\"\"; Port int \"mapstructure:\\\"port\\\"\"; Username string \"mapstructure:\\\"username\\\"\"; Password string \"mapstructure:\\\"password\\\"\"; DBName string \"mapstructure:\\\"dbname\\\"\"; ParseTime bool \"mapstructure:\\\"parseTime\\\"\" }{Host:\"192.168.10.4\", Port:3310, Username:\"root\", Password:\"123456\", DBName:\"siwuai\", ParseTime:false}, Etcd:struct { Endpoints []string \"mapstructure:\\\"endpoints\\\"\"; ServiceName string \"mapstructure:\\\"serviceName\\\"\"; ServiceAddr string \"mapstructure:\\\"serviceAddr\\\"\"; TTL int64 \"mapstructure:\\\"ttl\\\"\" }{Endpoints:[]string{\"127.0.0.1:2379\"}, ServiceName:\"/services/siwuai\", ServiceAddr:\"127.0.0.1:50051\", TTL:5}, Redis:struct { Addr string \"mapstructure:\\\"addr\\\"\"; Password string \"mapstructure:\\\"password\\\"\"; DB int \"mapstructure:\\\"db\\\"\"; Timeout int \"mapstructure:\\\"timeout\\\"\" }{Addr:\"192.168.10.4:6379\", Password:\"123456\", DB:0, Timeout:5}, Logger:struct { LogPath string \"mapstructure:\\\"logPath\\\"\"; AppName string \"mapstructure:\\\"appName\\\"\"; Level int8 \"mapstructure:\\\"level\\\"\" }{LogPath:\"./logs\", AppName:\"siwuai\", Level:-1}, Token:struct { SecretKey string \"mapstructure:\\\"secretKey\\\"\"; GenerateTokenKey string \"mapstructure:\\\"generateTokenKey\\\"\" }{SecretKey:\"123456\", GenerateTokenKey:\"123456\"}, Llm:struct { ApiKey string \"mapstructure:\\\"apiKey\\\"\"; Model string \"mapstructure:\\\"model\\\"\"; BaseURL string \"mapstructure:\\\"baseURL\\\"\"; TemperatureCode float64 \"mapstructure:\\\"temperatureCode\\\"\"; TemperatureArticle float64 \"mapstructure:\\\"temperatureArticle\\\"\" }{ApiKey:\"18e25f60-6aff-418f-96fe-55b8cee6a273\", Model:\"deepseek-r1-250120\", BaseURL:\"https://ark.cn-beijing.volces.com/api/v3\", TemperatureCode:0, TemperatureArticle:1}}\n"}
{"level":"info","ts":"2025-05-27T08:40:39.824+0800","caller":"server/main.go:41","msg":"初始化 MySQL 成功"}
{"level":"info","ts":"2025-05-27T08:40:39.852+0800","caller":"server/main.go:50","msg":" 初始化 Redis 成功"}
{"level":"info","ts":"2025-05-27T08:40:39.963+0800","caller":"utils/bloom_filter_manager.go:133","msg":"布隆过滤器初始化完成，共加载 408 条记录"}
{"level":"info","ts":"2025-05-27T08:40:39.963+0800","caller":"utils/bloom_filter.go:33","msg":"BloomFilter 加载完成，使用动态参数调整和定期重建机制"}
{"level":"info","ts":"2025-05-27T08:40:39.966+0800","caller":"cache/local_cache.go:43","msg":"本地缓存(BigCache)初始化成功"}
{"level":"info","ts":"2025-05-27T08:40:39.966+0800","caller":"cache/cache_manager.go:74","msg":"多级缓存管理器初始化成功"}
{"level":"info","ts":"2025-05-27T08:40:39.966+0800","caller":"cache/cache_manager.go:176","msg":"开始缓存预热..."}
{"level":"debug","ts":"2025-05-27T08:40:39.967+0800","caller":"v3@v3.5.12/retry_interceptor.go:53","msg":"retrying of unary invoker","target":"etcd-endpoints://0xc000506a80/127.0.0.1:2379","attempt":0}
{"level":"info","ts":"2025-05-27T08:40:39.968+0800","caller":"server/main.go:81","msg":"初始化 etcd 成功"}
{"level":"debug","ts":"2025-05-27T08:40:39.968+0800","caller":"v3@v3.5.12/retry_interceptor.go:53","msg":"retrying of unary invoker","target":"etcd-endpoints://0xc000506a80/127.0.0.1:2379","attempt":0}
{"level":"debug","ts":"2025-05-27T08:40:39.969+0800","caller":"v3@v3.5.12/retry_interceptor.go:53","msg":"retrying of unary invoker","target":"etcd-endpoints://0xc000506a80/127.0.0.1:2379","attempt":0}
{"level":"info","ts":"2025-05-27T08:40:39.970+0800","caller":"etcd/etcd.go:70","msg":"etcd 服务注册成功: /services/siwuai - 127.0.0.1:50051"}
{"level":"info","ts":"2025-05-27T08:40:39.970+0800","caller":"grpc/grpc_server.go:52","msg":"gRPC 服务器成功启动在端口 50051..."}
{"level":"debug","ts":"2025-05-27T08:40:40.011+0800","caller":"cache/cache_manager.go:144","msg":"缓存设置成功","key":"article:0","type":"article","expiration":259200,"data":"{\"ID\":310,\"CreatedAt\":\"2025-05-02T14:13:28.97+08:00\",\"UpdatedAt\":\"2025-05-02T14:13:28.97+08:00\",\"DeletedAt\":null,\"Key\":\"535fa30d7e25dd8a49f1536779734ec8286108d115da5045d77f3b4185d8f790\",\"ArticleID\":0,\"Abstract\":\"文章分析了 GORM 框架中四个核心方法的行为特征：1) First() 未查询到数据时返回 gorm.ErrRecordNotFound；2) Create() 插入失败时错误类型包含约束冲突/数据类型不匹配/连接问题；3) Update() 数据未变化时 RowsAffected 返回 0；4) Delete() 数据不存在时 error 为 nil 但 RowsAffected 为 0。\",\"Summary\":\"文章详细解构了 GORM ORM 框架在 CRUD 操作中的异常处理机制，重点阐述了不同方法在数据不存在/数据冲突/数据未变更等场景下的返回值特征，并提供了错误类型判断和事务回滚的实践建议。\",\"VisitCount\":0}"}
{"level":"debug","ts":"2025-05-27T08:40:40.023+0800","caller":"cache/cache_manager.go:144","msg":"缓存设置成功","key":"article:219","type":"article","expiration":259200,"data":"{\"ID\":298,\"CreatedAt\":\"2025-05-02T12:58:35.168+08:00\",\"UpdatedAt\":\"2025-05-02T12:58:35.168+08:00\",\"DeletedAt\":null,\"Key\":\"9834876dcfb05cb167a5c24953eba58c4ac89b1adf57f28f2f9d09af107ee8f0\",\"ArticleID\":219,\"Abstract\":\"文章内容存在异常，仅包含无意义字符\\\"aaa\\\"，无法提取有效技术信息\",\"Summary\":\"输入文本不符合技术文档规范，需提供完整的GORM框架技术解析内容才能进行有效分析\",\"VisitCount\":0}"}
{"level":"debug","ts":"2025-05-27T08:40:40.030+0800","caller":"cache/cache_manager.go:144","msg":"缓存设置成功","key":"article:0","type":"article","expiration":259200,"data":"{\"ID\":299,\"CreatedAt\":\"2025-05-02T13:17:15.799+08:00\",\"UpdatedAt\":\"2025-05-02T13:17:15.799+08:00\",\"DeletedAt\":null,\"Key\":\"8091efe97affa5ba5d7d8ea1aa14b037461433c4e890d45b188648d996790ed6\",\"ArticleID\":0,\"Abstract\":\"文章分析了 GORM 框架中四个核心方法的行为特征：1) First() 未查询到数据时返回 gorm.ErrRecordNotFound；2) Create() 插入失败时错误类型包含约束冲突/数据类型不匹配/连接问题；3) Update() 数据未变化时 RowsAffected 返回 0；4) Delete() 数据不存在时 error 为 nil 但 RowsAffected 为 0。\",\"Summary\":\"文章详细解构了 GORM ORM 框架在 CRUD 操作中的异常处理机制，重点阐述了不同方法在数据不存在/数据冲突/数据未变更等场景下的返回值特征，并提供了错误类型判断和事务回滚的实践建议。\",\"VisitCount\":0}"}
{"level":"debug","ts":"2025-05-27T08:40:40.058+0800","caller":"cache/cache_manager.go:144","msg":"缓存设置成功","key":"article:0","type":"article","expiration":259200,"data":"{\"ID\":300,\"CreatedAt\":\"2025-05-02T13:22:51.256+08:00\",\"UpdatedAt\":\"2025-05-02T13:22:51.256+08:00\",\"DeletedAt\":null,\"Key\":\"bcb15f821479b4d5772bd0ca866c00ad5f926e3580720659cc80d39c9d09802a\",\"ArticleID\":0,\"Abstract\":\"文章分析了 GORM 框架中四个核心方法的行为特征：1) First() 未查询到数据时返回 gorm.ErrRecordNotFound；2) Create() 插入失败时错误类型包含约束冲突/数据类型不匹配/连接问题；3) Update() 数据未变化时 RowsAffected 返回 0；4) Delete() 数据不存在时 error 为 nil 但 RowsAffected 为 0。\",\"Summary\":\"文章详细解构了 GORM ORM 框架在 CRUD 操作中的异常处理机制，重点阐述了不同方法在数据不存在/数据冲突/数据未变更等场景下的返回值特征，并提供了错误类型判断和事务回滚的实践建议。\",\"VisitCount\":0}"}
{"level":"debug","ts":"2025-05-27T08:40:40.071+0800","caller":"cache/cache_manager.go:144","msg":"缓存设置成功","key":"article:0","type":"article","expiration":259200,"data":"{\"ID\":301,\"CreatedAt\":\"2025-05-02T13:23:24.125+08:00\",\"UpdatedAt\":\"2025-05-02T13:23:24.125+08:00\",\"DeletedAt\":null,\"Key\":\"dd65c0a7536affef35f3383b9c1be5a8fe319f6a99c5c29a70f8c8b91ea8bba1\",\"ArticleID\":0,\"Abstract\":\"文章分析了 GORM 框架中四个核心方法的行为特征：1) First() 未查询到数据时返回 gorm.ErrRecordNotFound；2) Create() 插入失败时错误类型包含约束冲突/数据类型不匹配/连接问题；3) Update() 数据未变化时 RowsAffected 返回 0；4) Delete() 数据不存在时 error 为 nil 但 RowsAffected 为 0。\",\"Summary\":\"文章详细解构了 GORM ORM 框架在 CRUD 操作中的异常处理机制，重点阐述了不同方法在数据不存在/数据冲突/数据未变更等场景下的返回值特征，并提供了错误类型判断和事务回滚的实践建议。\",\"VisitCount\":0}"}
{"level":"debug","ts":"2025-05-27T08:40:40.076+0800","caller":"cache/cache_manager.go:144","msg":"缓存设置成功","key":"article:0","type":"article","expiration":259200,"data":"{\"ID\":302,\"CreatedAt\":\"2025-05-02T13:26:19.726+08:00\",\"UpdatedAt\":\"2025-05-02T13:26:19.726+08:00\",\"DeletedAt\":null,\"Key\":\"fe6340be87fd5e43b7f0cac5741e76205dd69a68b2024fda16c696848a720f7a\",\"ArticleID\":0,\"Abstract\":\"文章分析了 GORM 框架中四个核心方法的行为特征：1) First() 未查询到数据时返回 gorm.ErrRecordNotFound；2) Create() 插入失败时错误类型包含约束冲突/数据类型不匹配/连接问题；3) Update() 数据未变化时 RowsAffected 返回 0；4) Delete() 数据不存在时 error 为 nil 但 RowsAffected 为 0。\",\"Summary\":\"文章详细解构了 GORM ORM 框架在 CRUD 操作中的异常处理机制，重点阐述了不同方法在数据不存在/数据冲突/数据未变更等场景下的返回值特征，并提供了错误类型判断和事务回滚的实践建议。\",\"VisitCount\":0}"}
{"level":"debug","ts":"2025-05-27T08:40:40.091+0800","caller":"cache/cache_manager.go:144","msg":"缓存设置成功","key":"article:0","type":"article","expiration":259200,"data":"{\"ID\":303,\"CreatedAt\":\"2025-05-02T13:28:50.333+08:00\",\"UpdatedAt\":\"2025-05-02T13:28:50.333+08:00\",\"DeletedAt\":null,\"Key\":\"08dd19ebe332aeb67bca30589e54e627232949c7373d3e353f94c21f69a9d9c5\",\"ArticleID\":0,\"Abstract\":\"文章解析了 GORM 框架四个核心方法的异常处理机制：1) First() 未查询到数据返回 gorm.ErrRecordNotFound；2) Create() 插入失败包含约束冲突/数据类型错误/连接异常；3) Update() 数据未修改时 RowsAffected 为 0；4) Delete() 数据不存在时 error 为空但 RowsAffected 为 0。\",\"Summary\":\"文章系统梳理了 GORM 在 CRUD 操作中的错误反馈模式，重点说明不同方法在空查询/数据冲突/零变更等场景的返回值差异，并给出错误类型识别与事务处理的开发指导。\",\"VisitCount\":0}"}
{"level":"debug","ts":"2025-05-27T08:40:40.100+0800","caller":"cache/cache_manager.go:144","msg":"缓存设置成功","key":"article:0","type":"article","expiration":259200,"data":"{\"ID\":304,\"CreatedAt\":\"2025-05-02T13:35:21.924+08:00\",\"UpdatedAt\":\"2025-05-02T13:35:21.924+08:00\",\"DeletedAt\":null,\"Key\":\"cfae26288bd82e1a97669b7720470cf394e87b0e53bdd7e584055805cc63001f\",\"ArticleID\":0,\"Abstract\":\"文章解析了 GORM 框架四个核心方法的行为特征：1) First() 未查询到数据时返回特定错误类型；2) Create() 插入失败包含约束冲突等错误类型；3) Update() 数据未变化时返回 0 影响行数；4) Delete() 数据不存在时无错误但影响行数为 0。\",\"Summary\":\"文章系统梳理了 GORM 框架在 CRUD 操作中的异常处理逻辑，明确不同方法在数据冲突/不存在/未变更场景的返回值差异，并给出错误类型判断与事务处理的实践指导。\",\"VisitCount\":0}"}
{"level":"debug","ts":"2025-05-27T08:40:40.113+0800","caller":"cache/cache_manager.go:144","msg":"缓存设置成功","key":"article:0","type":"article","expiration":259200,"data":"{\"ID\":305,\"CreatedAt\":\"2025-05-02T13:37:45.413+08:00\",\"UpdatedAt\":\"2025-05-02T13:37:45.413+08:00\",\"DeletedAt\":null,\"Key\":\"27f200af7573aa4bf10b38a29b1a8fca4df35429b8a2f49cd827b87779ea978b\",\"ArticleID\":0,\"Abstract\":\"文章分析了 GORM 框架中四个核心方法的行为特征：1) First() 未查询到数据时返回 gorm.ErrRecordNotFound；2) Create() 插入失败时错误类型包含约束冲突/数据类型不匹配/连接问题；3) Update() 数据未变化时 RowsAffected 返回 0；4) Delete() 数据不存在时 error 为 nil 但 RowsAffected 为 0。\",\"Summary\":\"文章详细解构了 GORM ORM 框架在 CRUD 操作中的异常处理机制，重点阐述了不同方法在数据不存在/数据冲突/数据未变更等场景下的返回值特征，并提供了错误类型判断和事务回滚的实践建议。\",\"VisitCount\":0}"}
{"level":"debug","ts":"2025-05-27T08:40:40.122+0800","caller":"cache/cache_manager.go:144","msg":"缓存设置成功","key":"article:0","type":"article","expiration":259200,"data":"{\"ID\":306,\"CreatedAt\":\"2025-05-02T13:38:41.363+08:00\",\"UpdatedAt\":\"2025-05-02T13:38:41.363+08:00\",\"DeletedAt\":null,\"Key\":\"4a3ea36e79755b7eaad63e776b6d74f26b833410d08f7bc978330fddafe5844e\",\"ArticleID\":0,\"Abstract\":\"文章解析了 GORM 框架四个核心方法的异常处理机制：1) First() 未查询到数据返回 gorm.ErrRecordNotFound；2) Create() 插入失败包含约束冲突/数据类型错误/连接异常；3) Update() 数据未修改时 RowsAffected 为 0；4) Delete() 数据不存在时 error 为 nil 但 RowsAffected 为 0。\",\"Summary\":\"文章系统梳理了 GORM ORM 框架在 CRUD 操作中的错误反馈模式，重点对比不同方法在数据缺失/操作无效/执行失败等场景的返回值差异，并给出错误类型识别与事务处理的开发指导。\",\"VisitCount\":0}"}
{"level":"debug","ts":"2025-05-27T08:40:40.145+0800","caller":"cache/cache_manager.go:144","msg":"缓存设置成功","key":"article:0","type":"article","expiration":259200,"data":"{\"ID\":307,\"CreatedAt\":\"2025-05-02T13:38:50.781+08:00\",\"UpdatedAt\":\"2025-05-02T13:38:50.781+08:00\",\"DeletedAt\":null,\"Key\":\"5b0345f377ea69318b5f70d9a20d31cb42bac9a599188ceab6d5b5d00d7726ef\",\"ArticleID\":0,\"Abstract\":\"文章解析了 GORM 框架四个核心方法的行为特征：1) First() 未查询到数据时返回 gorm.ErrRecordNotFound；2) Create() 插入失败包含约束冲突/数据类型错误/连接异常；3) Update() 数据未修改时 RowsAffected 为 0；4) Delete() 数据不存在时 error 为 nil 但 RowsAffected 为 0。\",\"Summary\":\"文章系统剖析了 GORM 在 CRUD 操作中的异常处理逻辑，明确不同方法在空查询/数据冲突/无变更等场景的返回值差异，并给出错误类型识别与事务处理的工程实践指导。\",\"VisitCount\":0}"}
{"level":"debug","ts":"2025-05-27T08:40:40.160+0800","caller":"cache/cache_manager.go:144","msg":"缓存设置成功","key":"article:0","type":"article","expiration":259200,"data":"{\"ID\":308,\"CreatedAt\":\"2025-05-02T13:46:12.474+08:00\",\"UpdatedAt\":\"2025-05-02T13:46:12.474+08:00\",\"DeletedAt\":null,\"Key\":\"688787d8ff144c502c7f5cffaafe2cc588d86079f9de88304c26b0cb99ce91c6\",\"ArticleID\":0,\"Abstract\":\"文章分析了 GORM 框架中四个核心方法的行为特征：1) First() 未查询到数据时返回 gorm.ErrRecordNotFound；2) Create() 插入失败时错误类型包含约束冲突/数据类型不匹配/连接问题；3) Update() 数据未变化时 RowsAffected 返回 0；4) Delete() 数据不存在时 error 为 nil 但 RowsAffected 为 0。\",\"Summary\":\"文章详细解构了 GORM ORM 框架在 CRUD 操作中的异常处理机制，重点阐述了不同方法在数据不存在/数据冲突/数据未变更等场景下的返回值特征，并提供了错误类型判断和事务回滚的实践建议。\",\"VisitCount\":0}"}
{"level":"debug","ts":"2025-05-27T08:40:40.192+0800","caller":"cache/cache_manager.go:144","msg":"缓存设置成功","key":"article:0","type":"article","expiration":259200,"data":"{\"ID\":309,\"CreatedAt\":\"2025-05-02T13:52:17.664+08:00\",\"UpdatedAt\":\"2025-05-02T13:52:17.664+08:00\",\"DeletedAt\":null,\"Key\":\"19c451aedfb24c338a9a2a5c31d553ed77e7cdefc655035f390176ac24066051\",\"ArticleID\":0,\"Abstract\":\"文章分析了 GORM 框架中四个核心方法的行为特征：1) First() 未查询到数据时返回 gorm.ErrRecordNotFound；2) Create() 插入失败时错误类型包含约束冲突/数据类型不匹配/连接问题；3) Update() 数据未变化时 RowsAffected 返回 0；4) Delete() 数据不存在时 error 为 nil 但 RowsAffected 为 0。\",\"Summary\":\"文章详细解构了 GORM ORM 框架在 CRUD 操作中的异常处理机制，重点阐述了不同方法在数据不存在/数据冲突/数据未变更等场景下的返回值特征，并提供了错误类型判断和事务回滚的实践建议。\",\"VisitCount\":0}"}
{"level":"debug","ts":"2025-05-27T08:40:40.201+0800","caller":"cache/cache_manager.go:144","msg":"缓存设置成功","key":"article:0","type":"article","expiration":259200,"data":"{\"ID\":297,\"CreatedAt\":\"2025-05-02T12:57:46.292+08:00\",\"UpdatedAt\":\"2025-05-02T12:57:46.292+08:00\",\"DeletedAt\":null,\"Key\":\"5c4ba640d8f2bf13ef0e797e56a3a064770c11c8c975950f5bbf230ee022f94f\",\"ArticleID\":0,\"Abstract\":\"文章分析了 GORM 框架中四个核心方法的行为特征：1) First() 未查询到数据时返回 gorm.ErrRecordNotFound；2) Create() 插入失败时错误类型包含约束冲突/数据类型不匹配/连接问题；3) Update() 数据未变化时 RowsAffected 返回 0；4) Delete() 数据不存在时 error 为 nil 但 RowsAffected 为 0。\",\"Summary\":\"文章详细解构了 GORM ORM 框架在 CRUD 操作中的异常处理机制，重点阐述了不同方法在数据不存在/数据冲突/数据未变更等场景下的返回值特征，并提供了错误类型判断和事务回滚的实践建议。\",\"VisitCount\":0}"}
{"level":"debug","ts":"2025-05-27T08:40:40.218+0800","caller":"cache/cache_manager.go:144","msg":"缓存设置成功","key":"article:0","type":"article","expiration":259200,"data":"{\"ID\":311,\"CreatedAt\":\"2025-05-02T14:15:18.091+08:00\",\"UpdatedAt\":\"2025-05-02T14:15:18.091+08:00\",\"DeletedAt\":null,\"Key\":\"fa2b7af0a811b9acde602aacb78e3638e8506dfead5fe6c3425b10b526f94bdd\",\"ArticleID\":0,\"Abstract\":\"文章解析了 GORM 框架四个核心方法的异常处理机制：1) First() 未查询到数据返回 gorm.ErrRecordNotFound；2) Create() 插入失败包含约束冲突/数据类型错误/连接异常；3) Update() 数据未修改时 RowsAffected 为 0；4) Delete() 数据不存在时 error 为 nil 但 RowsAffected 为 0。\",\"Summary\":\"文章系统梳理了 GORM 在 CRUD 操作中的差异化错误处理逻辑，明确数据不存在、约束冲突、零值更新等场景下的返回值特征，并给出错误类型精准判断与事务处理的工程实践指导。\",\"VisitCount\":0}"}
{"level":"debug","ts":"2025-05-27T08:40:40.226+0800","caller":"cache/cache_manager.go:144","msg":"缓存设置成功","key":"article:0","type":"article","expiration":259200,"data":"{\"ID\":312,\"CreatedAt\":\"2025-05-02T14:17:12.998+08:00\",\"UpdatedAt\":\"2025-05-02T14:17:12.998+08:00\",\"DeletedAt\":null,\"Key\":\"4cf6829aa93728e8f3c97df913fb1bfa95fe5810e2933a05943f8312a98d9cf2\",\"ArticleID\":0,\"Abstract\":\"文章分析了 GORM 框架中四个核心方法的行为特征：1) First() 未查询到数据时返回 gorm.ErrRecordNotFound；2) Create() 插入失败时错误类型包含约束冲突/数据类型不匹配/连接问题；3) Update() 数据未变化时 RowsAffected 返回 0；4) Delete() 数据不存在时 error 为 nil 但 RowsAffected 为 0。\",\"Summary\":\"文章详细解构了 GORM ORM 框架在 CRUD 操作中的异常处理机制，重点阐述了不同方法在数据不存在/数据冲突/数据未变更等场景下的返回值特征，并提供了错误类型判断和事务回滚的实践建议。\",\"VisitCount\":0}"}
{"level":"debug","ts":"2025-05-27T08:40:40.241+0800","caller":"cache/cache_manager.go:144","msg":"缓存设置成功","key":"article:0","type":"article","expiration":259200,"data":"{\"ID\":313,\"CreatedAt\":\"2025-05-02T14:20:18.919+08:00\",\"UpdatedAt\":\"2025-05-02T14:20:18.919+08:00\",\"DeletedAt\":null,\"Key\":\"b2ca4c32632ea0aed838cbd24b30911f556f126a33f75f844f675fe391389532\",\"ArticleID\":0,\"Abstract\":\"文章分析了 GORM 框架中四个核心方法的行为特征：1) First() 未查询到数据时返回 gorm.ErrRecordNotFound；2) Create() 插入失败时错误类型包含约束冲突/数据类型不匹配/连接问题；3) Update() 数据未变化时 RowsAffected 返回 0；4) Delete() 数据不存在时 error 为 nil 但 RowsAffected 为 0。\",\"Summary\":\"文章详细解构了 GORM ORM 框架在 CRUD 操作中的异常处理机制，重点阐述了不同方法在数据不存在/数据冲突/数据未变更等场景下的返回值特征，并提供了错误类型判断和事务回滚的实践建议。\",\"VisitCount\":0}"}
{"level":"debug","ts":"2025-05-27T08:40:40.256+0800","caller":"cache/cache_manager.go:144","msg":"缓存设置成功","key":"article:0","type":"article","expiration":259200,"data":"{\"ID\":314,\"CreatedAt\":\"2025-05-03T00:54:17.478+08:00\",\"UpdatedAt\":\"2025-05-03T00:54:17.478+08:00\",\"DeletedAt\":null,\"Key\":\"d2696397e3ab70f45a7dad8676857947ddabe6abac3bc06d020ebafe84767cba\",\"ArticleID\":0,\"Abstract\":\"文章分析了 GORM 框架中四个核心方法的行为特征：1) First() 未查询到数据时返回 gorm.ErrRecordNotFound；2) Create() 插入失败时错误类型包含约束冲突/数据类型不匹配/连接问题；3) Update() 数据未变化时 RowsAffected 返回 0；4) Delete() 数据不存在时 error 为 nil 但 RowsAffected 为 0。\",\"Summary\":\"文章详细解构了 GORM ORM 框架在 CRUD 操作中的异常处理机制，重点阐述了不同方法在数据不存在/数据冲突/数据未变更等场景下的返回值特征，并提供了错误类型判断和事务回滚的实践建议。\",\"VisitCount\":0}"}
{"level":"debug","ts":"2025-05-27T08:40:40.270+0800","caller":"cache/cache_manager.go:144","msg":"缓存设置成功","key":"article:0","type":"article","expiration":259200,"data":"{\"ID\":315,\"CreatedAt\":\"2025-05-03T01:20:29.426+08:00\",\"UpdatedAt\":\"2025-05-03T01:20:29.426+08:00\",\"DeletedAt\":null,\"Key\":\"a665a45920422f9d417e4867efdc4fb8a04a1f3fff1fa07e998e86f7f7a27ae3\",\"ArticleID\":0,\"Abstract\":\"文章分析了 GORM 框架中四个核心方法的行为特征：1) First() 未查询到数据时返回 gorm.ErrRecordNotFound；2) Create() 插入失败时错误类型包含约束冲突/数据类型不匹配/连接问题；3) Update() 数据未变化时 RowsAffected 返回 0；4) Delete() 数据不存在时 error 为 nil 但 RowsAffected 为 0。\",\"Summary\":\"文章详细解构了 GORM ORM 框架在 CRUD 操作中的异常处理机制，重点阐述了不同方法在数据不存在/数据冲突/数据未变更等场景下的返回值特征，并提供了错误类型判断和事务回滚的实践建议。\",\"VisitCount\":0}"}
{"level":"debug","ts":"2025-05-27T08:40:40.289+0800","caller":"cache/cache_manager.go:144","msg":"缓存设置成功","key":"article:0","type":"article","expiration":259200,"data":"{\"ID\":316,\"CreatedAt\":\"2025-05-03T01:29:43.965+08:00\",\"UpdatedAt\":\"2025-05-03T01:29:43.965+08:00\",\"DeletedAt\":null,\"Key\":\"c5f9eb390a108b4859979e6b4356f30d03f48d8d836596fc8b09ab8307ef03f0\",\"ArticleID\":0,\"Abstract\":\"文章解析了 GORM 框架四个核心方法的异常处理机制：1) First() 未查询到数据返回 gorm.ErrRecordNotFound；2) Create() 插入失败包含约束冲突/数据类型错误/连接异常三类错误；3) Update() 数据未修改时 RowsAffected 为 0；4) Delete() 数据不存在时 error 为空但 RowsAffected 为 0。\",\"Summary\":\"文章系统梳理了 GORM 框架在 CRUD 操作中的错误处理逻辑，明确区分了数据不存在、约束冲突、数据未变更等场景下的返回值差异，并针对事务回滚场景提出了基于错误类型判断的工程实践建议。\",\"VisitCount\":0}"}
{"level":"debug","ts":"2025-05-27T08:40:40.295+0800","caller":"cache/cache_manager.go:144","msg":"缓存设置成功","key":"article:0","type":"article","expiration":259200,"data":"{\"ID\":317,\"CreatedAt\":\"2025-05-03T01:30:11.957+08:00\",\"UpdatedAt\":\"2025-05-03T01:30:11.957+08:00\",\"DeletedAt\":null,\"Key\":\"7104741a92e73eb6c5d69cd04cf0afbe50a8796a010d8fa25daaf79e5e173bf3\",\"ArticleID\":0,\"Abstract\":\"文章解析了 GORM 框架四个核心方法的异常处理机制：1) First() 未查询到数据返回 gorm.ErrRecordNotFound；2) Create() 插入失败包含约束冲突/数据类型错误/连接异常；3) Update() 数据未修改时 RowsAffected=0；4) Delete() 数据不存在时 error 为 nil 但 RowsAffected=0。\",\"Summary\":\"文章系统阐述了 GORM 框架在 CRUD 操作中的错误返回逻辑，明确不同方法在数据缺失/冲突/未变更场景下的差异化处理方式，并给出错误类型识别与事务管理的具体指导方案。\",\"VisitCount\":0}"}
{"level":"debug","ts":"2025-05-27T08:40:40.305+0800","caller":"cache/cache_manager.go:144","msg":"缓存设置成功","key":"article:0","type":"article","expiration":259200,"data":"{\"ID\":318,\"CreatedAt\":\"2025-05-03T01:52:59.034+08:00\",\"UpdatedAt\":\"2025-05-03T01:52:59.034+08:00\",\"DeletedAt\":null,\"Key\":\"9b2de7c2319128b345a6024cb7836a49a98919c4a6777fbb66d3e55200c7b86f\",\"ArticleID\":0,\"Abstract\":\"文章分析了 GORM 框架中四个核心方法的行为特征：1) First() 未查询到数据时返回 gorm.ErrRecordNotFound；2) Create() 插入失败时错误类型包含约束冲突/数据类型不匹配/连接问题；3) Update() 数据未变化时 RowsAffected 返回 0；4) Delete() 数据不存在时 error 为 nil 但 RowsAffected 为 0。\",\"Summary\":\"文章详细解构了 GORM ORM 框架在 CRUD 操作中的异常处理机制，重点阐述了不同方法在数据不存在/数据冲突/数据未变更等场景下的返回值特征，并提供了错误类型判断和事务回滚的实践建议。\",\"VisitCount\":0}"}
{"level":"debug","ts":"2025-05-27T08:40:40.330+0800","caller":"cache/cache_manager.go:144","msg":"缓存设置成功","key":"article:0","type":"article","expiration":259200,"data":"{\"ID\":319,\"CreatedAt\":\"2025-05-03T01:54:58.768+08:00\",\"UpdatedAt\":\"2025-05-03T01:54:58.768+08:00\",\"DeletedAt\":null,\"Key\":\"3949ac1596ec77106a709a618bf5adcb19b77537ce8bcbdf54ff830169cdd084\",\"ArticleID\":0,\"Abstract\":\"文章解析了 GORM 框架四个核心方法的异常处理机制：1) First() 未查询到数据时返回 gorm.ErrRecordNotFound；2) Create() 插入失败可能因约束冲突/数据类型错误/连接问题触发错误；3) Update() 数据未修改时 RowsAffected 为 0；4) Delete() 数据不存在时 error 为空但 RowsAffected 为 0。\",\"Summary\":\"文章系统梳理了 GORM 在 CRUD 操作中的差异化错误反馈模式，明确了数据不存在、冲突校验、无变更场景下的返回值逻辑，并针对事务回滚和错误类型判断给出开发实践指导。\",\"VisitCount\":0}"}
{"level":"debug","ts":"2025-05-27T08:40:40.359+0800","caller":"cache/cache_manager.go:144","msg":"缓存设置成功","key":"article:0","type":"article","expiration":259200,"data":"{\"ID\":320,\"CreatedAt\":\"2025-05-03T02:02:22.169+08:00\",\"UpdatedAt\":\"2025-05-03T02:02:22.169+08:00\",\"DeletedAt\":null,\"Key\":\"33c995ef4bb3f05a77fbc5842b651cc1580880f595b95b09954af6da1e989b78\",\"ArticleID\":0,\"Abstract\":\"文章解析了 GORM 框架四个核心方法在异常场景下的返回值特征：1) First() 未查询到数据时返回 gorm.ErrRecordNotFound；2) Create() 插入失败包含约束冲突/数据类型错误/连接异常；3) Update() 数据未修改时 RowsAffected 为 0；4) Delete() 数据不存在时 error 为 nil 但 RowsAffected 为 0。\",\"Summary\":\"文章系统梳理了 GORM 框架在 CRUD 操作中的差异化错误处理逻辑，明确不同方法在数据缺失、约束冲突、零变更等场景的响应机制，并给出错误类型识别与事务管理的具体指导方案。\",\"VisitCount\":0}"}
{"level":"debug","ts":"2025-05-27T08:40:40.368+0800","caller":"cache/cache_manager.go:144","msg":"缓存设置成功","key":"article:0","type":"article","expiration":259200,"data":"{\"ID\":321,\"CreatedAt\":\"2025-05-03T02:17:56.451+08:00\",\"UpdatedAt\":\"2025-05-03T02:17:56.451+08:00\",\"DeletedAt\":null,\"Key\":\"5b986360eeaed5e6a90b04f1e9075f150664d65ad0d8cd389e08732fc14ac401\",\"ArticleID\":0,\"Abstract\":\"文章分析了 GORM 框架中四个核心方法的行为特征：1) First() 未查询到数据时返回 gorm.ErrRecordNotFound；2) Create() 插入失败时错误类型包含约束冲突/数据类型不匹配/连接问题；3) Update() 数据未变化时 RowsAffected 返回 0；4) Delete() 数据不存在时 error 为 nil 但 RowsAffected 为 0。\",\"Summary\":\"文章详细解构了 GORM ORM 框架在 CRUD 操作中的异常处理机制，重点阐述了不同方法在数据不存在/数据冲突/数据未变更等场景下的返回值特征，并提供了错误类型判断和事务回滚的实践建议。\",\"VisitCount\":0}"}
{"level":"debug","ts":"2025-05-27T08:40:40.386+0800","caller":"cache/cache_manager.go:144","msg":"缓存设置成功","key":"article:0","type":"article","expiration":259200,"data":"{\"ID\":413,\"CreatedAt\":\"2025-05-17T07:42:58.526+08:00\",\"UpdatedAt\":\"2025-05-17T07:42:58.526+08:00\",\"DeletedAt\":null,\"Key\":\"473287f8298dba7163a897908958f7c0eae733e25d2e027992ea2edc9bed2fa8\",\"ArticleID\":0,\"Abstract\":\"\",\"Summary\":\"\",\"VisitCount\":0}"}
{"level":"debug","ts":"2025-05-27T08:40:40.394+0800","caller":"cache/cache_manager.go:144","msg":"缓存设置成功","key":"article:0","type":"article","expiration":259200,"data":"{\"ID\":269,\"CreatedAt\":\"2025-05-02T06:42:20.45+08:00\",\"UpdatedAt\":\"2025-05-02T06:42:20.45+08:00\",\"DeletedAt\":null,\"Key\":\"47ec0c4bbeda610899ba7b7f46ed98c872d0c20a5d3f04adc1ca5edcf5ff85a9\",\"ArticleID\":0,\"Abstract\":\"文章分析了 GORM 框架中四个核心方法的行为特征：1) First() 未查询到数据时返回 gorm.ErrRecordNotFound；2) Create() 插入失败时错误类型包含约束冲突/数据类型不匹配/连接问题；3) Update() 数据未变化时 RowsAffected 返回 0；4) Delete() 数据不存在时 error 为 nil 但 RowsAffected 为 0。\",\"Summary\":\"文章详细解构了 GORM ORM 框架在 CRUD 操作中的异常处理机制，重点阐述了不同方法在数据不存在/数据冲突/数据未变更等场景下的返回值特征，并提供了错误类型判断和事务回滚的实践建议。\",\"VisitCount\":0}"}
{"level":"debug","ts":"2025-05-27T08:40:40.413+0800","caller":"cache/cache_manager.go:144","msg":"缓存设置成功","key":"article:0","type":"article","expiration":259200,"data":"{\"ID\":257,\"CreatedAt\":\"2025-05-02T01:29:47.087+08:00\",\"UpdatedAt\":\"2025-05-02T01:29:47.087+08:00\",\"DeletedAt\":null,\"Key\":\"e29c9c180c6279b0b02abd6a1801c7c04082cf486ec027aa13515e4f3884bb6b\",\"ArticleID\":0,\"Abstract\":\"文章分析了 GORM 框架中四个核心方法的行为特征：1) First() 未查询到数据时返回 gorm.ErrRecordNotFound；2) Create() 插入失败时错误类型包含约束冲突/数据类型不匹配/连接问题；3) Update() 数据未变化时 RowsAffected 返回 0；4) Delete() 数据不存在时 error 为 nil 但 RowsAffected 为 0。\",\"Summary\":\"文章详细解构了 GORM ORM 框架在 CRUD 操作中的异常处理机制，重点阐述了不同方法在数据不存在/数据冲突/数据未变更等场景下的返回值特征，并提供了错误类型判断和事务回滚的实践建议。\",\"VisitCount\":0}"}
{"level":"debug","ts":"2025-05-27T08:40:40.423+0800","caller":"cache/cache_manager.go:144","msg":"缓存设置成功","key":"article:0","type":"article","expiration":259200,"data":"{\"ID\":258,\"CreatedAt\":\"2025-05-02T01:35:40.126+08:00\",\"UpdatedAt\":\"2025-05-02T01:35:40.126+08:00\",\"DeletedAt\":null,\"Key\":\"46372e8648989e4c62b21193f6ce9bc0e0a10e51da07d6e43c3b2de46c44c0d3\",\"ArticleID\":0,\"Abstract\":\"文章分析了 GORM 框架中四个核心方法的行为特征：1) First() 未查询到数据时返回 gorm.ErrRecordNotFound；2) Create() 插入失败时错误类型包含约束冲突/数据类型不匹配/连接问题；3) Update() 数据未变化时 RowsAffected 返回 0；4) Delete() 数据不存在时 error 为 nil 但 RowsAffected 为 0。\",\"Summary\":\"文章详细解构了 GORM ORM 框架在 CRUD 操作中的异常处理机制，重点阐述了不同方法在数据不存在/数据冲突/数据未变更等场景下的返回值特征，并提供了错误类型判断和事务回滚的实践建议。\",\"VisitCount\":0}"}
{"level":"debug","ts":"2025-05-27T08:40:40.449+0800","caller":"cache/cache_manager.go:144","msg":"缓存设置成功","key":"article:0","type":"article","expiration":259200,"data":"{\"ID\":259,\"CreatedAt\":\"2025-05-02T01:36:17.481+08:00\",\"UpdatedAt\":\"2025-05-02T01:36:17.481+08:00\",\"DeletedAt\":null,\"Key\":\"0e67e8a86cac5209b4c3d735112c843aae2dc7e55f00704bf24fbbda24fd3a8e\",\"ArticleID\":0,\"Abstract\":\"文章分析了 GORM 框架中四个核心方法的行为特征：1) First() 未查询到数据时返回 gorm.ErrRecordNotFound；2) Create() 插入失败时错误类型包含约束冲突/数据类型不匹配/连接问题；3) Update() 数据未变化时 RowsAffected 返回 0；4) Delete() 数据不存在时 error 为 nil 但 RowsAffected 为 0。\",\"Summary\":\"文章详细解构了 GORM ORM 框架在 CRUD 操作中的异常处理机制，重点阐述了不同方法在数据不存在/数据冲突/数据未变更等场景下的返回值特征，并提供了错误类型判断和事务回滚的实践建议。\",\"VisitCount\":0}"}
{"level":"debug","ts":"2025-05-27T08:40:40.464+0800","caller":"cache/cache_manager.go:144","msg":"缓存设置成功","key":"article:0","type":"article","expiration":259200,"data":"{\"ID\":260,\"CreatedAt\":\"2025-05-02T02:24:46.693+08:00\",\"UpdatedAt\":\"2025-05-02T02:24:46.693+08:00\",\"DeletedAt\":null,\"Key\":\"b553e6af4fb183a84375bf1e79a2be2768fc3c50344bff533a9baba97bd537fe\",\"ArticleID\":0,\"Abstract\":\"文章分析了 GORM 框架中四个核心方法的行为特征：1) First() 未查询到数据时返回 gorm.ErrRecordNotFound；2) Create() 插入失败时错误类型包含约束冲突/数据类型不匹配/连接问题；3) Update() 数据未变化时 RowsAffected 返回 0；4) Delete() 数据不存在时 error 为 nil 但 RowsAffected 为 0。\",\"Summary\":\"文章详细解构了 GORM ORM 框架在 CRUD 操作中的异常处理机制，重点阐述了不同方法在数据不存在/数据冲突/数据未变更等场景下的返回值特征，并提供了错误类型判断和事务回滚的实践建议。\",\"VisitCount\":0}"}
{"level":"debug","ts":"2025-05-27T08:40:40.471+0800","caller":"cache/cache_manager.go:144","msg":"缓存设置成功","key":"article:0","type":"article","expiration":259200,"data":"{\"ID\":261,\"CreatedAt\":\"2025-05-02T02:39:41.677+08:00\",\"UpdatedAt\":\"2025-05-02T02:39:41.677+08:00\",\"DeletedAt\":null,\"Key\":\"835d5e8314340ab852a2f979ab4cd53e994dbe38366afb6eed84fe4957b980c8\",\"ArticleID\":0,\"Abstract\":\"文章分析了 GORM 框架中四个核心方法的行为特征：1) First() 未查询到数据时返回 gorm.ErrRecordNotFound；2) Create() 插入失败时错误类型包含约束冲突/数据类型不匹配/连接问题；3) Update() 数据未变化时 RowsAffected 返回 0；4) Delete() 数据不存在时 error 为 nil 但 RowsAffected 为 0。\",\"Summary\":\"文章详细解构了 GORM ORM 框架在 CRUD 操作中的异常处理机制，重点阐述了不同方法在数据不存在/数据冲突/数据未变更等场景下的返回值特征，并提供了错误类型判断和事务回滚的实践建议。\",\"VisitCount\":0}"}
{"level":"debug","ts":"2025-05-27T08:40:40.488+0800","caller":"cache/cache_manager.go:144","msg":"缓存设置成功","key":"article:0","type":"article","expiration":259200,"data":"{\"ID\":262,\"CreatedAt\":\"2025-05-02T02:41:21.962+08:00\",\"UpdatedAt\":\"2025-05-02T02:41:21.962+08:00\",\"DeletedAt\":null,\"Key\":\"455473bb653666fcac550a5e00453a10783c44720a70e08e7f44d8b7498d522f\",\"ArticleID\":0,\"Abstract\":\"文章解析了 GORM 框架四个核心方法的异常处理机制：1) First() 未查询到数据返回 gorm.ErrRecordNotFound；2) Create() 插入失败涉及约束冲突/数据类型错误/连接异常；3) Update() 数据未修改时 RowsAffected 为 0；4) Delete() 数据不存在时 error 为 nil 但 RowsAffected 为 0。\",\"Summary\":\"文章系统梳理了 GORM 在 CRUD 操作中的差异化错误处理逻辑，明确不同方法在数据异常场景（如记录缺失、约束冲突、无变更操作）下的返回值规则，并强调通过错误类型判断和 RowsAffected 值实现精准的事务控制。\",\"VisitCount\":0}"}
{"level":"debug","ts":"2025-05-27T08:40:40.504+0800","caller":"cache/cache_manager.go:144","msg":"缓存设置成功","key":"article:0","type":"article","expiration":259200,"data":"{\"ID\":263,\"CreatedAt\":\"2025-05-02T02:42:00.185+08:00\",\"UpdatedAt\":\"2025-05-02T02:42:00.185+08:00\",\"DeletedAt\":null,\"Key\":\"6f4b6612125fb3a0daecd2799dfd6c9c299424fd920f9b308110a2c1fbd8f443\",\"ArticleID\":0,\"Abstract\":\"文章解析了 GORM 框架四个核心方法的行为特征：1) First() 未查询到数据返回 gorm.ErrRecordNotFound；2) Create() 插入失败包含约束冲突/数据类型错误/连接异常；3) Update() 数据未修改时 RowsAffected 为 0；4) Delete() 数据不存在时 error 为空但 RowsAffected 为 0。\",\"Summary\":\"文章系统梳理了 GORM 框架在 CRUD 操作中的异常处理逻辑，明确不同方法在数据缺失/冲突/无变更场景下的返回值差异，并给出错误类型识别与事务处理的开发指导。\",\"VisitCount\":0}"}
{"level":"debug","ts":"2025-05-27T08:40:40.516+0800","caller":"cache/cache_manager.go:144","msg":"缓存设置成功","key":"article:0","type":"article","expiration":259200,"data":"{\"ID\":264,\"CreatedAt\":\"2025-05-02T03:15:13.063+08:00\",\"UpdatedAt\":\"2025-05-02T03:15:13.063+08:00\",\"DeletedAt\":null,\"Key\":\"521ea9c60b025d7ac36b93e3af4d3a6aeb3a400c01f198d14d4768e0862762ab\",\"ArticleID\":0,\"Abstract\":\"文章解析了 GORM 框架四个核心方法的异常处理机制：1) First() 未查询到数据返回 gorm.ErrRecordNotFound；2) Create() 插入失败包含约束冲突/数据类型错误/连接异常；3) Update() 数据未修改时 RowsAffected 为 0；4) Delete() 数据不存在时 error 为 nil 但 RowsAffected 为 0。\",\"Summary\":\"文章系统梳理了 GORM 框架在 CRUD 操作中的异常处理逻辑，明确不同方法在数据缺失/冲突/未变更等场景的返回值差异，并给出错误类型识别与事务处理的工程实践指导。\",\"VisitCount\":0}"}
{"level":"debug","ts":"2025-05-27T08:40:40.527+0800","caller":"cache/cache_manager.go:144","msg":"缓存设置成功","key":"article:0","type":"article","expiration":259200,"data":"{\"ID\":265,\"CreatedAt\":\"2025-05-02T03:15:54.862+08:00\",\"UpdatedAt\":\"2025-05-02T03:15:54.862+08:00\",\"DeletedAt\":null,\"Key\":\"98f1f17f9a73ccfe3e25940add8d9ce9bf05513104cacb84f2f1185bf5886a84\",\"ArticleID\":0,\"Abstract\":\"文章分析了 GORM 框架中四个核心方法的行为特征：1) First() 未查询到数据时返回 gorm.ErrRecordNotFound；2) Create() 插入失败时错误类型包含约束冲突/数据类型不匹配/连接问题；3) Update() 数据未变化时 RowsAffected 返回 0；4) Delete() 数据不存在时 error 为 nil 但 RowsAffected 为 0。\",\"Summary\":\"文章详细解构了 GORM ORM 框架在 CRUD 操作中的异常处理机制，重点阐述了不同方法在数据不存在/数据冲突/数据未变更等场景下的返回值特征，并提供了错误类型判断和事务回滚的实践建议。\",\"VisitCount\":0}"}
{"level":"debug","ts":"2025-05-27T08:40:40.537+0800","caller":"cache/cache_manager.go:144","msg":"缓存设置成功","key":"article:0","type":"article","expiration":259200,"data":"{\"ID\":266,\"CreatedAt\":\"2025-05-02T03:25:22.766+08:00\",\"UpdatedAt\":\"2025-05-02T03:25:22.766+08:00\",\"DeletedAt\":null,\"Key\":\"814bb6b8dc12188a44b71e378dc20a4292e01979aa9ab95b09b8a681391dfc9d\",\"ArticleID\":0,\"Abstract\":\"文章解析了 GORM 框架四个核心方法的异常处理机制：1) First() 未查询到数据返回特定错误类型；2) Create() 插入失败包含多种错误类型判断；3) Update() 数据未变更时返回 0 影响行数；4) Delete() 数据不存在时返回空错误但影响行数为 0。\",\"Summary\":\"文章系统梳理了 GORM ORM 框架在 CRUD 操作中的错误反馈模式，重点对比不同方法在数据异常场景下的返回值差异，并给出基于错误类型判断实现事务回滚的工程实践指导。\",\"VisitCount\":0}"}
{"level":"debug","ts":"2025-05-27T08:40:40.551+0800","caller":"cache/cache_manager.go:144","msg":"缓存设置成功","key":"article:0","type":"article","expiration":259200,"data":"{\"ID\":267,\"CreatedAt\":\"2025-05-02T03:29:30.926+08:00\",\"UpdatedAt\":\"2025-05-02T03:29:30.926+08:00\",\"DeletedAt\":null,\"Key\":\"78a69c6fdc7b95f502f14d3c826b21528318ef248796d5a41478096973dd1ad6\",\"ArticleID\":0,\"Abstract\":\"文章分析了 GORM 框架中四个核心方法的行为特征：1) First() 未查询到数据时返回 gorm.ErrRecordNotFound；2) Create() 插入失败时错误类型包含约束冲突/数据类型不匹配/连接问题；3) Update() 数据未变化时 RowsAffected 返回 0；4) Delete() 数据不存在时 error 为 nil 但 RowsAffected 为 0。\",\"Summary\":\"文章详细解构了 GORM ORM 框架在 CRUD 操作中的异常处理机制，重点阐述了不同方法在数据不存在/数据冲突/数据未变更等场景下的返回值特征，并提供了错误类型判断和事务回滚的实践建议。\",\"VisitCount\":0}"}
{"level":"debug","ts":"2025-05-27T08:40:40.559+0800","caller":"cache/cache_manager.go:144","msg":"缓存设置成功","key":"article:0","type":"article","expiration":259200,"data":"{\"ID\":268,\"CreatedAt\":\"2025-05-02T06:39:54.453+08:00\",\"UpdatedAt\":\"2025-05-02T06:39:54.453+08:00\",\"DeletedAt\":null,\"Key\":\"8d23cf6c86e834a7aa6eded54c26ce2bb2e74903538c61bdd5d2197997ab2f72\",\"ArticleID\":0,\"Abstract\":\"文章解析了 GORM 框架四个核心方法的行为特征：1) First() 未查询到数据返回 gorm.ErrRecordNotFound；2) Create() 插入失败包含约束冲突/数据类型错误/连接异常；3) Update() 数据未修改时 RowsAffected 显示 0；4) Delete() 数据不存在时 error 为空但 RowsAffected 为 0。\",\"Summary\":\"文章系统剖析了 GORM 框架在 CRUD 操作中的异常处理逻辑，明确不同方法在数据缺失/约束冲突/数据未更新等场景的返回值规则，同时给出错误类型识别与事务处理的开发指导。\",\"VisitCount\":0}"}
{"level":"debug","ts":"2025-05-27T08:40:40.596+0800","caller":"cache/cache_manager.go:144","msg":"缓存设置成功","key":"article:0","type":"article","expiration":259200,"data":"{\"ID\":256,\"CreatedAt\":\"2025-05-02T01:24:14.611+08:00\",\"UpdatedAt\":\"2025-05-02T01:24:14.611+08:00\",\"DeletedAt\":null,\"Key\":\"3c15285c04fff40024bb8714b93e58178bf8d3bebe6943178e1c5412957b7aa1\",\"ArticleID\":0,\"Abstract\":\"文章解析了 GORM 框架四个核心方法的行为特征：1) First() 未查询到数据时返回 gorm.ErrRecordNotFound；2) Create() 插入失败时错误类型包含约束冲突/数据类型不匹配/连接问题；3) Update() 数据未变化时 RowsAffected 返回 0；4) Delete() 数据不存在时 error 为 nil 但 RowsAffected 为 0。\",\"Summary\":\"文章系统剖析了 GORM ORM 框架在 CRUD 操作中的异常处理逻辑，明确指出了不同方法在数据不存在、约束冲突、数据未变更等场景下的返回值差异，并给出错误类型判断与事务处理的实战指导。\",\"VisitCount\":0}"}
{"level":"debug","ts":"2025-05-27T08:40:40.599+0800","caller":"cache/cache_manager.go:144","msg":"缓存设置成功","key":"article:0","type":"article","expiration":259200,"data":"{\"ID\":270,\"CreatedAt\":\"2025-05-02T06:51:52.339+08:00\",\"UpdatedAt\":\"2025-05-02T06:51:52.339+08:00\",\"DeletedAt\":null,\"Key\":\"eb1e33e8a81b697b75855af6bfcdbcbf7cbbde9f94962ceaec1ed8af21f5a50f\",\"ArticleID\":0,\"Abstract\":\"文章分析了 GORM 框架中四个核心方法的行为特征：1) First() 未查询到数据时返回 gorm.ErrRecordNotFound；2) Create() 插入失败时错误类型包含约束冲突/数据类型不匹配/连接问题；3) Update() 数据未变化时 RowsAffected 返回 0；4) Delete() 数据不存在时 error 为 nil 但 RowsAffected 为 0。\",\"Summary\":\"文章详细解构了 GORM ORM 框架在 CRUD 操作中的异常处理机制，重点阐述了不同方法在数据不存在/数据冲突/数据未变更等场景下的返回值特征，并提供了错误类型判断和事务回滚的实践建议。\",\"VisitCount\":0}"}
{"level":"debug","ts":"2025-05-27T08:40:40.613+0800","caller":"cache/cache_manager.go:144","msg":"缓存设置成功","key":"article:0","type":"article","expiration":259200,"data":"{\"ID\":271,\"CreatedAt\":\"2025-05-02T07:05:50.267+08:00\",\"UpdatedAt\":\"2025-05-02T07:05:50.267+08:00\",\"DeletedAt\":null,\"Key\":\"72440a20f54075ac43f51a2cf0dbb2a14366b38a5c01b110ae174abc1cb44238\",\"ArticleID\":0,\"Abstract\":\"文章解析了 GORM 框架四个核心方法的异常处理特征：1) First() 未查询到数据返回 gorm.ErrRecordNotFound；2) Create() 插入失败包含约束冲突/数据类型错误/连接异常；3) Update() 数据未修改时 RowsAffected 为 0；4) Delete() 数据不存在时 error 为 nil 但 RowsAffected 为 0。\",\"Summary\":\"文章系统剖析了 GORM 框架在 CRUD 操作中的错误处理逻辑，明确不同方法在数据缺失、约束冲突、数据未变更等场景的返回值差异，并给出错误类型判定与事务处理的工程实践指导。\",\"VisitCount\":0}"}
{"level":"debug","ts":"2025-05-27T08:40:40.650+0800","caller":"cache/cache_manager.go:144","msg":"缓存设置成功","key":"article:0","type":"article","expiration":259200,"data":"{\"ID\":272,\"CreatedAt\":\"2025-05-02T07:22:00.69+08:00\",\"UpdatedAt\":\"2025-05-02T07:22:00.69+08:00\",\"DeletedAt\":null,\"Key\":\"02d20bbd7e394ad5999a4cebabac9619732c343a4cac99470c03e23ba2bdc2bc\",\"ArticleID\":0,\"Abstract\":\"文章分析了 GORM 框架中四个核心方法的行为特征：1) First() 未查询到数据时返回 gorm.ErrRecordNotFound；2) Create() 插入失败时错误类型包含约束冲突、数据类型不匹配和连接问题；3) Update() 数据未变化时 RowsAffected 返回 0；4) Delete() 数据不存在时 error 为 nil 但 RowsAffected 为 0。\",\"Summary\":\"文章详细解构了 GORM ORM 框架在 CRUD 操作中的异常处理机制，重点阐述了不同方法在数据不存在、数据冲突、数据未变更等场景下的返回值特征，并提供了错误类型判断和事务回滚的实践建议。\",\"VisitCount\":0}"}
{"level":"debug","ts":"2025-05-27T08:40:40.667+0800","caller":"cache/cache_manager.go:144","msg":"缓存设置成功","key":"article:198","type":"article","expiration":259200,"data":"{\"ID\":276,\"CreatedAt\":\"2025-05-02T11:49:10.953+08:00\",\"UpdatedAt\":\"2025-05-02T11:49:10.953+08:00\",\"DeletedAt\":null,\"Key\":\"61e944c39aad9f7fc90d41ed6bbc97b900ba215daab120bc3915f6a99a39340b\",\"ArticleID\":198,\"Abstract\":\"文章系统阐述了《弟子规》的核心行为规范体系，包含总叙、入则孝、出则悌、谨四个篇章，具体涉及孝道实践（父母呼应勿缓）、兄弟相处（财物轻怨何生）、生活礼仪（晨必盥兼漱口）等传统道德准则。\",\"Summary\":\"该文完整呈现了儒家启蒙经典《弟子规》的完整文本结构，通过三字韵文形式系统规范了古代儿童在家庭伦理、社交礼仪、行为习惯等方面的具体要求，体现了孝悌仁爱、谨言慎行的传统教育思想。\",\"VisitCount\":0}"}
{"level":"debug","ts":"2025-05-27T08:40:40.674+0800","caller":"cache/cache_manager.go:144","msg":"缓存设置成功","key":"article:0","type":"article","expiration":259200,"data":"{\"ID\":277,\"CreatedAt\":\"2025-05-02T12:05:32.246+08:00\",\"UpdatedAt\":\"2025-05-02T12:05:32.246+08:00\",\"DeletedAt\":null,\"Key\":\"242ecc061256959a4a779496a69524518623527c8c53d039848351822cc8d311\",\"ArticleID\":0,\"Abstract\":\"文章分析了 GORM 框架中四个核心方法的行为特征：1) First() 未查询到数据时返回 gorm.ErrRecordNotFound；2) Create() 插入失败时错误类型包含约束冲突/数据类型不匹配/连接问题；3) Update() 数据未变化时 RowsAffected 返回 0；4) Delete() 数据不存在时 error 为 nil 但 RowsAffected 为 0。\",\"Summary\":\"文章详细解构了 GORM ORM 框架在 CRUD 操作中的异常处理机制，重点阐述了不同方法在数据不存在/数据冲突/数据未变更等场景下的返回值特征，并提供了错误类型判断和事务回滚的实践建议。\",\"VisitCount\":0}"}
{"level":"debug","ts":"2025-05-27T08:40:40.695+0800","caller":"cache/cache_manager.go:144","msg":"缓存设置成功","key":"article:213","type":"article","expiration":259200,"data":"{\"ID\":291,\"CreatedAt\":\"2025-05-02T12:46:12.941+08:00\",\"UpdatedAt\":\"2025-05-02T12:46:12.941+08:00\",\"DeletedAt\":null,\"Key\":\"730f75dafd73e047b86acb2dbd74e75dcb93272fa084a9082848f2341aa1abb6\",\"ArticleID\":213,\"Abstract\":\"文章分析了 GORM 框架中四个核心方法的行为特征：1) First() 未查询到数据时返回 gorm.ErrRecordNotFound；2) Create() 插入失败时错误类型包含约束冲突/数据类型不匹配/连接问题；3) Update() 数据未变化时 RowsAffected 返回 0；4) Delete() 数据不存在时 error 为 nil 但 RowsAffected 为 0。\",\"Summary\":\"文章详细解构了 GORM ORM 框架在 CRUD 操作中的异常处理机制，重点阐述了不同方法在数据不存在/数据冲突/数据未变更等场景下的返回值特征，并提供了错误类型判断和事务回滚的实践建议。\",\"VisitCount\":0}"}
{"level":"debug","ts":"2025-05-27T08:40:40.712+0800","caller":"cache/cache_manager.go:144","msg":"缓存设置成功","key":"article:0","type":"article","expiration":259200,"data":"{\"ID\":292,\"CreatedAt\":\"2025-05-02T12:52:44.389+08:00\",\"UpdatedAt\":\"2025-05-02T12:52:44.389+08:00\",\"DeletedAt\":null,\"Key\":\"afbd9fa69b7b567d901b5f28c0d91f69707fda75d27a11dfb98d3e3841724f19\",\"ArticleID\":0,\"Abstract\":\"文章分析了 GORM 框架中四个核心方法的行为特征：1) First() 未查询到数据时返回 gorm.ErrRecordNotFound；2) Create() 插入失败时错误类型包含约束冲突/数据类型不匹配/连接问题；3) Update() 数据未变化时 RowsAffected 返回 0；4) Delete() 数据不存在时 error 为 nil 但 RowsAffected 为 0。\",\"Summary\":\"文章详细解构了 GORM ORM 框架在 CRUD 操作中的异常处理机制，重点阐述了不同方法在数据不存在/数据冲突/数据未变更等场景下的返回值特征，并提供了错误类型判断和事务回滚的实践建议。\",\"VisitCount\":0}"}
{"level":"debug","ts":"2025-05-27T08:40:40.752+0800","caller":"cache/cache_manager.go:144","msg":"缓存设置成功","key":"article:0","type":"article","expiration":259200,"data":"{\"ID\":293,\"CreatedAt\":\"2025-05-02T12:56:54.5+08:00\",\"UpdatedAt\":\"2025-05-02T12:56:54.5+08:00\",\"DeletedAt\":null,\"Key\":\"49cbe57e9503aa0c6d0cf1f88ec2b8e1dfb870c346fb9c82bc0489915108d75a\",\"ArticleID\":0,\"Abstract\":\"文章分析了 GORM 框架中四个核心方法的行为特征：1) First() 未查询到数据时返回 gorm.ErrRecordNotFound；2) Create() 插入失败时错误类型包含约束冲突/数据类型不匹配/连接问题；3) Update() 数据未变化时 RowsAffected 返回 0；4) Delete() 数据不存在时 error 为 nil 但 RowsAffected 为 0。\",\"Summary\":\"文章详细解构了 GORM ORM 框架在 CRUD 操作中的异常处理机制，重点阐述了不同方法在数据不存在/数据冲突/数据未变更等场景下的返回值特征，并提供了错误类型判断和事务回滚的实践建议。\",\"VisitCount\":0}"}
{"level":"debug","ts":"2025-05-27T08:40:40.782+0800","caller":"cache/cache_manager.go:144","msg":"缓存设置成功","key":"article:0","type":"article","expiration":259200,"data":"{\"ID\":294,\"CreatedAt\":\"2025-05-02T12:57:01.049+08:00\",\"UpdatedAt\":\"2025-05-02T12:57:01.049+08:00\",\"DeletedAt\":null,\"Key\":\"3b395c46ec8489e20e985b02fe317eb04965e9f3c11f45186fd54c51af9cd1b4\",\"ArticleID\":0,\"Abstract\":\"文章分析了 GORM 框架中四个核心方法的行为特征：1) First() 未查询到数据时返回 gorm.ErrRecordNotFound；2) Create() 插入失败时错误类型包含约束冲突/数据类型不匹配/连接问题；3) Update() 数据未变化时 RowsAffected 返回 0；4) Delete() 数据不存在时 error 为 nil 但 RowsAffected 为 0。\",\"Summary\":\"文章详细解构了 GORM ORM 框架在 CRUD 操作中的异常处理机制，重点阐述了不同方法在数据不存在/数据冲突/数据未变更等场景下的返回值特征，并提供了错误类型判断和事务回滚的实践建议。\",\"VisitCount\":0}"}
{"level":"debug","ts":"2025-05-27T08:40:40.820+0800","caller":"cache/cache_manager.go:144","msg":"缓存设置成功","key":"article:0","type":"article","expiration":259200,"data":"{\"ID\":295,\"CreatedAt\":\"2025-05-02T12:57:33.072+08:00\",\"UpdatedAt\":\"2025-05-02T12:57:33.072+08:00\",\"DeletedAt\":null,\"Key\":\"eb83b900f20760249fa1f3342eeb9efda14da7d5701eb3eb1e8e1169aadb5921\",\"ArticleID\":0,\"Abstract\":\"文章分析了 GORM 框架中四个核心方法的行为特征：1) First() 未查询到数据时返回 gorm.ErrRecordNotFound；2) Create() 插入失败时错误类型包含约束冲突/数据类型不匹配/连接问题；3) Update() 数据未变化时 RowsAffected 返回 0；4) Delete() 数据不存在时 error 为 nil 但 RowsAffected 为 0。\",\"Summary\":\"文章详细解构了 GORM ORM 框架在 CRUD 操作中的异常处理机制，重点阐述了不同方法在数据不存在/数据冲突/数据未变更等场景下的返回值特征，并提供了错误类型判断和事务回滚的实践建议。\",\"VisitCount\":0}"}
{"level":"info","ts":"2025-05-27T08:40:40.820+0800","caller":"cache/cache_manager.go:240","msg":"文章缓存预热完成","count":50}
{"level":"info","ts":"2025-05-27T08:40:40.820+0800","caller":"cache/cache_manager.go:184","msg":"缓存预热完成"}
{"level":"info","ts":"2025-05-27T08:48:50.604+0800","caller":"grpc/question_grpc_handler.go:37","msg":"GenerateQuestionTitles called","content":"请帮我生成一个Web程序！！"}
{"level":"info","ts":"2025-05-27T08:50:09.428+0800","caller":"grpc/question_grpc_handler.go:37","msg":"GenerateQuestionTitles called","content":"请帮我生成一个Web程序！！"}
{"level":"info","ts":"2025-05-27T08:52:07.121+0800","caller":"grpc/question_grpc_handler.go:37","msg":"GenerateQuestionTitles called","content":"请帮我生成一个Web程序！！"}
{"level":"info","ts":"2025-05-27T08:57:42.685+0800","caller":"grpc/question_grpc_handler.go:37","msg":"GenerateQuestionTitles called","content":"请帮我生成一个Web程序！！"}
{"level":"info","ts":"2025-05-27T08:58:19.277+0800","caller":"grpc/question_grpc_handler.go:37","msg":"GenerateQuestionTitles called","content":"请帮我生成一个Web程序！！"}
{"level":"info","ts":"2025-05-27T09:00:15.452+0800","caller":"grpc/question_grpc_handler.go:37","msg":"GenerateQuestionTitles called","content":"请帮我生成一个Web程序！！"}
{"level":"info","ts":"2025-05-27T09:20:25.525+0800","caller":"grpc/question_grpc_handler.go:37","msg":"GenerateQuestionTitles called","content":"请帮我生成一个Web程序！！"}
{"level":"info","ts":"2025-05-27T09:21:48.566+0800","caller":"grpc/question_grpc_handler.go:37","msg":"GenerateQuestionTitles called","content":"请帮我生成一个Web程序！！"}
{"level":"info","ts":"2025-05-27T09:24:40.506+0800","caller":"grpc/question_grpc_handler.go:37","msg":"GenerateQuestionTitles called","content":"请帮我生成一个Web程序！！"}
{"level":"info","ts":"2025-05-27T09:28:47.853+0800","caller":"grpc/question_grpc_handler.go:37","msg":"GenerateQuestionTitles called","content":"请帮我生成一个Web程序！！"}
{"level":"info","ts":"2025-05-27T09:30:48.876+0800","caller":"grpc/question_grpc_handler.go:37","msg":"GenerateQuestionTitles called","content":"请帮我生成一个Web程序！！"}
{"level":"info","ts":"2025-05-27T09:40:18.950+0800","caller":"grpc/question_grpc_handler.go:37","msg":"GenerateQuestionTitles called","content":"请帮我生成一个Web程序！！"}
{"level":"info","ts":"2025-05-27T09:45:34.196+0800","caller":"grpc/question_grpc_handler.go:37","msg":"GenerateQuestionTitles called","content":"请帮我生成一个Web程序！！"}
{"level":"info","ts":"2025-05-27T09:46:05.570+0800","caller":"grpc/question_grpc_handler.go:37","msg":"GenerateQuestionTitles called","content":"请帮我生成一个Web程序！！"}
{"level":"info","ts":"2025-05-27T09:46:32.582+0800","caller":"grpc/question_grpc_handler.go:37","msg":"GenerateQuestionTitles called","content":"请帮我生成一个Web程序！！"}
{"level":"info","ts":"2025-05-27T09:47:04.786+0800","caller":"grpc/question_grpc_handler.go:37","msg":"GenerateQuestionTitles called","content":"请帮我生成一个Web程序！！"}
{"level":"info","ts":"2025-05-27T09:47:44.803+0800","caller":"server/main.go:98","msg":"接收到退出信号，开始注销etcd服务...\n"}
{"level":"debug","ts":"2025-05-27T09:47:44.804+0800","caller":"v3@v3.5.12/retry_interceptor.go:53","msg":"retrying of unary invoker","target":"etcd-endpoints://0xc000506a80/127.0.0.1:2379","attempt":0}
